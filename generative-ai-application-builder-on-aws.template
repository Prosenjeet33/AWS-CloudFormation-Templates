{
  "Description": "(SO0276) - generative-ai-application-builder-on-aws - DeploymentPlatformStack - Version v3.0.3",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Please provide admin user email"
          },
          "Parameters": [
            "AdminUserEmail"
          ]
        },
        {
          "Label": {
            "default": "Optional: If you would like to deploy the solution with a VPC Configuration"
          },
          "Parameters": [
            "VpcEnabled",
            "CreateNewVpc",
            "IPAMPoolId"
          ]
        },
        {
          "Label": {
            "default": "Optional: If you would like to deploy the solution with a Web Application"
          },
          "Parameters": [
            "DeployUI"
          ]
        },
        {
          "Label": {
            "default": "Optional: Existing VPC configuration to use, if you would like to deploy the solution in a VPC and with your existing VPC configuration."
          },
          "Parameters": [
            "ExistingVpcId",
            "ExistingPrivateSubnetIds",
            "ExistingSecurityGroupIds",
            "VpcAzs"
          ]
        },
        {
          "Label": {
            "default": "Optional: If you would like to provide a sub domain for the UserPoolClient configuration. If not provided, a hashed value using the AWS Account number, current region, and stack name, will be used as sub-domain name"
          },
          "Parameters": [
            "CognitoDomainPrefix"
          ]
        },
        {
          "Label": {
            "default": "Optional: Provide existing Cognito UserPool and UserPoolClient IDs if you want to use your own managed resources. If left empty, the solution will manage these resources for you. Note: To prevent the creation of Cognito resources within the user pool (Users/Groups), simply leave the AdminUserEmail parameter empty."
          },
          "Parameters": [
            "ExistingCognitoUserPoolId",
            "ExistingCognitoUserPoolClient"
          ]
        }
      ]
    }
  },
  "Parameters": {
    "VpcEnabled": {
      "Type": "String",
      "Default": "No",
      "AllowedPattern": "^Yes|No$",
      "AllowedValues": [
        "Yes",
        "No"
      ],
      "Description": "Should the stacks resources be deployed within a VPC"
    },
    "CreateNewVpc": {
      "Type": "String",
      "Default": "No",
      "AllowedPattern": "^Yes|No$",
      "AllowedValues": [
        "Yes",
        "No"
      ],
      "Description": "Select \"Yes\", if you would like to create a new VPC"
    },
    "IPAMPoolId": {
      "Type": "String",
      "Default": "",
      "AllowedPattern": "^$|^ipam-pool-([0-9a-zA-Z])+$",
      "ConstraintDescription": "The provided IPAM Pool Id is not a valid format. IPAM Id should be be of the following format \"^ipam-pool-([0-9a-zA-Z])+$\"",
      "Description": "If you would like to assign the CIDR range using AWS VPC IP Address Manager, please provide the IPAM pool Id to use",
      "MaxLength": 50
    },
    "DeployUI": {
      "Type": "String",
      "Default": "Yes",
      "AllowedValues": [
        "Yes",
        "No"
      ],
      "Description": "Please select the option to deploy the front end UI for this deployment. Selecting No, will only create the infrastructure to host the APIs, the authentication for the APIs, and backend processing"
    },
    "CognitoDomainPrefix": {
      "Type": "String",
      "Default": "",
      "AllowedPattern": "^$|^[a-z0-9](?:[a-z0-9\\-]{0,61}[a-z0-9])?$",
      "ConstraintDescription": "The provided domain prefix is not a valid format. The domain prefix should be be of the following format \"^[a-z0-9](?:[a-z0-9\\-]{0,61}[a-z0-9])?$\"",
      "Description": "If you would like to provide a domain for the Cognito User Pool Client, please enter a value. If a value is not provided, the deployment will generate one",
      "MaxLength": 63
    },
    "ExistingVpcId": {
      "Type": "String",
      "Default": "",
      "AllowedPattern": "^$|^vpc-\\w{8}(\\w{9})?$",
      "Description": "VPC ID of an existing VPC to be used for the use case."
    },
    "ExistingPrivateSubnetIds": {
      "Type": "CommaDelimitedList",
      "Default": "",
      "AllowedPattern": "^$|^subnet-\\w{8}(\\w{9})?$",
      "ConstraintDescription": "If using an existing VPC configuration, please provide a valid list of subnet Ids for AWS Lambda function configuration",
      "Description": "Comma separated list of subnet IDs of existing private subnets to be used to deploy the AWS Lambda function"
    },
    "VpcAzs": {
      "Type": "CommaDelimitedList",
      "Default": "",
      "AllowedPattern": "^$|^[a-z0-9-]+$",
      "ConstraintDescription": "If using an existing VPC, please provide a valid list of AZs",
      "Description": "Comma separated list of AZs in which subnets of the VPCs are created"
    },
    "ExistingSecurityGroupIds": {
      "Type": "CommaDelimitedList",
      "Default": "",
      "AllowedPattern": "^$|^sg-\\w{8}(\\w{9})?$",
      "ConstraintDescription": "If using an existing VPC, please provide a valid list of Security Group IDs for AWS Lambda function configuration",
      "Description": "Comma separated list of security groups of the existing vpc to be used for configuring lambda functions"
    },
    "AdminUserEmail": {
      "Type": "String",
      "AllowedPattern": "^$|[A-Za-z0-9_!#$%&'*+/=?`{|}~^.-]+@[A-Za-z0-9.-]+$",
      "ConstraintDescription": "Please provide a valid email",
      "Description": "Optional - Email used to create the default cognito user for the admin platform. If empty, the Cognito User, Group and Attachment will not be created."
    },
    "ExistingCognitoUserPoolId": {
      "Type": "String",
      "Default": "",
      "AllowedPattern": "^$|^[0-9a-zA-Z_-]{9,24}$",
      "Description": "UserPoolId of an existing cognito user pool which this use case will be authenticated with. Typically will be provided when deploying from the deployment platform, but can be omitted when deploying this use-case stack standalone.",
      "MaxLength": 24
    },
    "ExistingCognitoUserPoolClient": {
      "Type": "String",
      "Default": "",
      "AllowedPattern": "^$|^[a-z0-9]{3,128}$",
      "Description": "Optional - Provide a User Pool Client (App Client) to use an existing one. If not provided a new User Pool Client will be created. This parameter can only be provided if an existing User Pool Id is provided",
      "MaxLength": 128
    }
  },
  "Conditions": {
    "VPCEnabledCondition": {
      "Fn::Equals": [
        {
          "Ref": "VpcEnabled"
        },
        "Yes"
      ]
    },
    "CreateNewVPCCondition": {
      "Fn::Equals": [
        {
          "Ref": "CreateNewVpc"
        },
        "Yes"
      ]
    },
    "DeployVPCCondition": {
      "Fn::And": [
        {
          "Condition": "CreateNewVPCCondition"
        },
        {
          "Condition": "VPCEnabledCondition"
        }
      ]
    },
    "IPAMPoolIdProvidedCondition": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "IPAMPoolId"
            },
            ""
          ]
        }
      ]
    },
    "AnonymousDataAWSCondition": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "Solution",
            "Data",
            "SendAnonymousUsageData"
          ]
        },
        "Yes"
      ]
    },
    "IsInternalUserCondition": {
      "Fn::Equals": [
        {
          "Fn::Select": [
            0,
            {
              "Fn::Split": [
                ".",
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "@",
                        {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Ref": "AdminUserEmail"
                              },
                              "@example.com"
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        "amazon"
      ]
    },
    "DeployWebAppUIInfrastructureCondition": {
      "Fn::Equals": [
        {
          "Ref": "DeployUI"
        },
        "Yes"
      ]
    },
    "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85": {
      "Fn::Equals": [
        "true",
        "false"
      ]
    },
    "UseCaseManagementSetupUseCaseEndpointSetupCreateApiRoutesCondition0060F23A": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            "DeploymentPlatform",
            "DeploymentPlatform"
          ]
        },
        {
          "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
        }
      ]
    },
    "UseCaseManagementSetupUseCaseEndpointSetupDeployVPCIfLambdaExistsFE27E265": {
      "Fn::And": [
        {
          "Condition": "DeployVPCCondition"
        },
        {
          "Condition": "UseCaseManagementSetupUseCaseEndpointSetupCreateApiRoutesCondition0060F23A"
        }
      ]
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentConditionE2E28337": {
      "Fn::Equals": [
        "true",
        "false"
      ]
    },
    "CreateFeedbackResources": {
      "Fn::Equals": [
        "true",
        "true"
      ]
    },
    "DeployCustomDashboard": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "FeaturesToDeploy",
            "Deploy",
            "CustomDashboard"
          ]
        },
        "Yes"
      ]
    },
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-3"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-4"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "il-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            }
          ]
        },
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region"
            },
            "us-west-2"
          ]
        }
      ]
    }
  },
  "Rules": {
    "CheckIfVPCParamsProvided": {
      "RuleCondition": {
        "Fn::And": [
          {
            "Fn::Equals": [
              {
                "Ref": "VpcEnabled"
              },
              "Yes"
            ]
          },
          {
            "Fn::Equals": [
              {
                "Ref": "CreateNewVpc"
              },
              "No"
            ]
          }
        ]
      },
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "ExistingVpcId"
                  },
                  ""
                ]
              }
            ]
          },
          "AssertDescription": "To use existing VPC, you must provide a value for parameter ExistingVpcId"
        },
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  {
                    "Ref": "ExistingPrivateSubnetIds"
                  },
                  ""
                ]
              }
            ]
          },
          "AssertDescription": "To use existing VPC, private subnet Ids should be provided."
        },
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  {
                    "Ref": "ExistingSecurityGroupIds"
                  },
                  ""
                ]
              }
            ]
          },
          "AssertDescription": "To use existing VPC, SecurityGroups associated with the subnets should be provided."
        }
      ]
    },
    "CheckIfExistingVPCParamsAreProvidedWhenNotAllowed": {
      "RuleCondition": {
        "Fn::Or": [
          {
            "Fn::And": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "VpcEnabled"
                  },
                  "Yes"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "CreateNewVpc"
                  },
                  "Yes"
                ]
              }
            ]
          },
          {
            "Fn::Equals": [
              {
                "Ref": "VpcEnabled"
              },
              "No"
            ]
          }
        ]
      },
      "Assertions": [
        {
          "Assert": {
            "Fn::Equals": [
              {
                "Ref": "ExistingVpcId"
              },
              ""
            ]
          },
          "AssertDescription": "When creating a new VPC, you can not provide an existing VPC ID"
        },
        {
          "Assert": {
            "Fn::Contains": [
              {
                "Ref": "ExistingPrivateSubnetIds"
              },
              ""
            ]
          },
          "AssertDescription": "If you are not using a VPC or \"CreateNewVpc\" is set as \"Yes\", you can not provide existing subnet IDs"
        },
        {
          "Assert": {
            "Fn::Contains": [
              {
                "Ref": "VpcAzs"
              },
              ""
            ]
          },
          "AssertDescription": "If you are not using a VPC or \"CreateNewVpc\" is set as \"Yes\", you can not provide AZs."
        },
        {
          "Assert": {
            "Fn::Contains": [
              {
                "Ref": "ExistingSecurityGroupIds"
              },
              ""
            ]
          },
          "AssertDescription": "If you are not using a VPC or \"CreateNewVpc\" is set as \"Yes\", you can not provide SecurityGroups"
        }
      ]
    },
    "CheckIfDeloyVpcNotSetIfVpcEnabledIsFalse": {
      "RuleCondition": {
        "Fn::Equals": [
          {
            "Ref": "VpcEnabled"
          },
          "No"
        ]
      },
      "Assertions": [
        {
          "Assert": {
            "Fn::Equals": [
              {
                "Ref": "CreateNewVpc"
              },
              "No"
            ]
          },
          "AssertDescription": "Deployment is not VPC enabled, first select \"VpcEnabled\" to \"Yes\", and then select \"CreateNewVpc\" to \"Yes\" to create a new VPC"
        }
      ]
    },
    "CheckIfIPAMPoolIdCanBeProvided": {
      "RuleCondition": {
        "Fn::Or": [
          {
            "Fn::And": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "VpcEnabled"
                  },
                  "Yes"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "CreateNewVpc"
                  },
                  "No"
                ]
              }
            ]
          },
          {
            "Fn::And": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "VpcEnabled"
                  },
                  "No"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "CreateNewVpc"
                  },
                  "No"
                ]
              }
            ]
          }
        ]
      },
      "Assertions": [
        {
          "Assert": {
            "Fn::Equals": [
              {
                "Ref": "IPAMPoolId"
              },
              ""
            ]
          },
          "AssertDescription": "To use AWS VPC IP Address Manager, first select \"VpcEnabled\" to \"Yes\", and then select \"CreateNewVpc\" to \"Yes\""
        }
      ]
    },
    "CognitoUserPoolAndClientRule": {
      "RuleCondition": {
        "Fn::Not": [
          {
            "Fn::Equals": [
              {
                "Ref": "ExistingCognitoUserPoolId"
              },
              ""
            ]
          }
        ]
      },
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "ExistingCognitoUserPoolClient"
                  },
                  ""
                ]
              }
            ]
          },
          "AssertDescription": "If an existing User Pool Id is provided, then an existing User Pool Client Id must also be provided."
        }
      ]
    },
    "CognitoDomainNotProvidedIfPoolIsRule": {
      "RuleCondition": {
        "Fn::Not": [
          {
            "Fn::Equals": [
              {
                "Ref": "ExistingCognitoUserPoolId"
              },
              ""
            ]
          }
        ]
      },
      "Assertions": [
        {
          "Assert": {
            "Fn::Equals": [
              {
                "Ref": "CognitoDomainPrefix"
              },
              ""
            ]
          },
          "AssertDescription": "If an existing User Pool Id is provided, then a domain name for the User Pool Client must not be provided."
        }
      ]
    }
  },
  "Resources": {
    "DeploymentPlatformSetupAccessLog67D5D503": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "This S3 bucket is used as the access logging bucket for another bucket",
              "id": "AwsSolutions-S1"
            }
          ]
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "F14",
              "reason": "This bucket is used as an access logging bucket and hence requires PublicReadWrite ACL configuration"
            },
            {
              "id": "W35",
              "reason": "The bucket is an access logging and hence it does not have an access log configured for itself"
            }
          ]
        }
      }
    },
    "DeploymentPlatformSetupAccessLogPolicy2FB262B2": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "DeploymentPlatformSetupAccessLog67D5D503"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DeploymentPlatformSetupAccessLog67D5D503",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DeploymentPlatformSetupAccessLog67D5D503",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "DeploymentPlatformSetupInfraSetupCustomResourceDynamoDBPolicy9530C9CF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":lambda:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":function:*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:DescribeLogGroups",
                "logs:PutRetentionPolicy"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/lambda/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group::log-stream:*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "DeploymentPlatformSetupInfraSetupCustomResourceDynamoDBPolicy9530C9CF",
        "Roles": [
          {
            "Ref": "DeploymentPlatformSetupCustomResourceLambdaRole3C444A9D"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Lambda role policy is to read and write dynamodb buckets for model info and configuration",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:lambda:<AWS::Region>:<AWS::AccountId>:function:*",
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*",
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group::log-stream:*"
              ]
            }
          ]
        }
      }
    },
    "DeploymentPlatformSetupInfraSetupCustomResource5473231F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "generative-ai-application-builder-on-aws/v3.0.3/assetff8ee327d575d9bc2190d3640b1fe27c3540dd6f760a0acd9758c4d7124f69b1.zip"
        },
        "Description": "A custom resource lambda function to perform operations based on operation type",
        "Environment": {
          "Variables": {
            "POWERTOOLS_SERVICE_NAME": "CUSTOM-RESOURCE",
            "AWS_SDK_USER_AGENT": "{ \"user_agent_extra\": \"AWSSOLUTION/SO0276/v3.0.3\" }"
          }
        },
        "Handler": "lambda_func.handler",
        "Layers": [
          {
            "Ref": "Boto3Layer463A0AEA"
          },
          {
            "Ref": "PythonUserAgentLayer6958F3C0"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "DeploymentPlatformSetupCustomResourceLambdaRole3C444A9D",
            "Arn"
          ]
        },
        "Runtime": "python3.13",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "DeploymentPlatformSetupCustomResourceLambdaRoleDefaultPolicy1B835079",
        "DeploymentPlatformSetupCustomResourceLambdaRole3C444A9D"
      ],
      "Metadata": {
        "aws:asset:path": "asset.ff8ee327d575d9bc2190d3640b1fe27c3540dd6f760a0acd9758c4d7124f69b1",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W89",
              "reason": "VPC is not mandated in the solution. This lambda has no business logic but only gathers metrics. Hence is not deployed in a VPC"
            },
            {
              "id": "W92",
              "reason": "The solution does not enforce reserved concurrency"
            }
          ]
        }
      }
    },
    "DeploymentPlatformSetupInfraSetupCustomResourceLogRetention7B85E9E4": {
      "Type": "Custom::CW_LOG_RETENTION",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "DeploymentPlatformSetupInfraSetupCustomResource5473231F",
            "Arn"
          ]
        },
        "FunctionName": {
          "Ref": "DeploymentPlatformSetupInfraSetupCustomResource5473231F"
        },
        "Resource": "CW_LOG_RETENTION"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "DeploymentPlatformSetupInfraSetupScheduledAnonymousMetrics34A8D055": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "generative-ai-application-builder-on-aws/v3.0.3/assetff8ee327d575d9bc2190d3640b1fe27c3540dd6f760a0acd9758c4d7124f69b1.zip"
        },
        "Description": "A lambda function that runs as per defined schedule to publish metrics",
        "Environment": {
          "Variables": {
            "POWERTOOLS_SERVICE_NAME": "ANONYMOUS-CW-METRICS",
            "SOLUTION_ID": "SO0276",
            "SOLUTION_VERSION": "v3.0.3",
            "USE_CASE_UUID": {
              "Fn::GetAtt": [
                "DeploymentPlatformSetupGenUUIDE08D47F0",
                "UUID"
              ]
            },
            "REST_API_NAME": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421"
                          }
                        ]
                      }
                    ]
                  },
                  "-UseCaseManagementAPI"
                ]
              ]
            },
            "AWS_SDK_USER_AGENT": "{ \"user_agent_extra\": \"AWSSOLUTION/SO0276/v3.0.3\" }"
          }
        },
        "Handler": "lambda_ops_metrics.handler",
        "Layers": [
          {
            "Ref": "Boto3Layer463A0AEA"
          },
          {
            "Ref": "PythonUserAgentLayer6958F3C0"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "DeploymentPlatformSetupScheduledMetricsLambdaRole89420F9F",
            "Arn"
          ]
        },
        "Runtime": "python3.13",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "DeploymentPlatformSetupScheduledMetricsLambdaRoleDefaultPolicy7CE81C15",
        "DeploymentPlatformSetupScheduledMetricsLambdaRole89420F9F"
      ],
      "Metadata": {
        "aws:asset:path": "asset.ff8ee327d575d9bc2190d3640b1fe27c3540dd6f760a0acd9758c4d7124f69b1",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W89",
              "reason": "VPC is not mandated in the solution. This lambda has no business logic but only gathers metrics. Hence is not deployed in a VPC"
            },
            {
              "id": "W92",
              "reason": "The solution does not enforce reserved concurrency"
            }
          ]
        }
      },
      "Condition": "AnonymousDataAWSCondition"
    },
    "DeploymentPlatformSetupInfraSetupScheduleLogRetentionF1D0F3ED": {
      "Type": "Custom::CW_LOG_RETENTION",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "DeploymentPlatformSetupInfraSetupCustomResource5473231F",
            "Arn"
          ]
        },
        "FunctionName": {
          "Ref": "DeploymentPlatformSetupInfraSetupScheduledAnonymousMetrics34A8D055"
        },
        "Resource": "CW_LOG_RETENTION"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Condition": "AnonymousDataAWSCondition"
    },
    "DeploymentPlatformSetupInfraSetupGetMetricsDataPolicy82387FDA": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudwatch:GetMetricData",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "DeploymentPlatformSetupInfraSetupGetMetricsDataPolicy82387FDA",
        "Roles": [
          {
            "Ref": "DeploymentPlatformSetupScheduledMetricsLambdaRole89420F9F"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Lambda requires this permission to read metrics from CloudWatch logs",
              "id": "AwsSolutions-IAM5"
            }
          ]
        }
      }
    },
    "DeploymentPlatformSetupInfraSetupMetricsPublishFrequencyB2020316": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(3 hours)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "DeploymentPlatformSetupInfraSetupScheduledAnonymousMetrics34A8D055",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Condition": "AnonymousDataAWSCondition"
    },
    "DeploymentPlatformSetupInfraSetupMetricsPublishFrequencyAllowEventRuleDeploymentPlatformStackDeploymentPlatformSetupInfraSetupScheduledAnonymousMetricsCE3BF48507FDD1A2": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DeploymentPlatformSetupInfraSetupScheduledAnonymousMetrics34A8D055",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "DeploymentPlatformSetupInfraSetupMetricsPublishFrequencyB2020316",
            "Arn"
          ]
        }
      },
      "Condition": "AnonymousDataAWSCondition"
    },
    "DeploymentPlatformSetupCustomResourceLambdaRole3C444A9D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "logs:PutLogEvents",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*:log-stream:*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*"
              ]
            },
            {
              "reason": "Lambda function has the required permission to write CloudWatch Log streams. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*:log-stream:*"
              ]
            },
            {
              "reason": "Even though the resource is \"*\", the actions have been scoped down only to the ones required by the solution",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Action::ec2:*ssignPrivateIpAddresses",
                "Action::ec2:De*NetworkInterface"
              ]
            }
          ]
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "The exact resource arn is unknown at this time. Hence wildcard. The arns are have been restricted to the account and region where possible, except for \"ec2:Describe\" calls which require the arn to be a wildcard"
            },
            {
              "id": "W12",
              "reason": "The exact resource arn is unknown at this time. Hence wildcard. The arns are have been restricted to the account and region where possible, except for \"ec2:Describe\" calls which require the arn to be a wildcard"
            },
            {
              "id": "W13",
              "reason": "The exact resource arn is unknown at this time. Hence wildcard. The arns are have been restricted to the account and region where possible, except for \"ec2:Describe\" calls which require the arn to be a wildcard"
            },
            {
              "id": "F10",
              "reason": "The inline policy avoids a rare race condition between the lambda, Role and the policy resource creation."
            }
          ]
        }
      }
    },
    "DeploymentPlatformSetupCustomResourceLambdaRoleDefaultPolicy1B835079": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTelemetryRecords",
                "xray:PutTraceSegments"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "DeploymentPlatformSetupCustomResourceLambdaRoleDefaultPolicy1B835079",
        "Roles": [
          {
            "Ref": "DeploymentPlatformSetupCustomResourceLambdaRole3C444A9D"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Lambda role policy is configured to read data from S3 bucket",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Action::s3:Abort*",
                "Action::s3:DeleteObject*",
                "Resource::<SetupAppConfig016B0097.Arn>/*"
              ]
            },
            {
              "reason": "The wildcard permission is required to publish events for x-ray insights",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::*"
              ]
            }
          ]
        }
      }
    },
    "DeploymentPlatformSetupScheduledMetricsLambdaRole89420F9F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "logs:PutLogEvents",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*:log-stream:*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*"
              ]
            },
            {
              "reason": "Lambda function has the required permission to write CloudWatch Log streams. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*:log-stream:*"
              ]
            },
            {
              "reason": "Even though the resource is \"*\", the actions have been scoped down only to the ones required by the solution",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Action::ec2:*ssignPrivateIpAddresses",
                "Action::ec2:De*NetworkInterface"
              ]
            },
            {
              "reason": "This policy allows get metric data from CloudWatch and has been specified per the AWS documentation.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::*"
              ]
            }
          ]
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "The exact resource arn is unknown at this time. Hence wildcard. The arns are have been restricted to the account and region where possible, except for \"ec2:Describe\" calls which require the arn to be a wildcard"
            },
            {
              "id": "W12",
              "reason": "The exact resource arn is unknown at this time. Hence wildcard. The arns are have been restricted to the account and region where possible, except for \"ec2:Describe\" calls which require the arn to be a wildcard"
            },
            {
              "id": "W13",
              "reason": "The exact resource arn is unknown at this time. Hence wildcard. The arns are have been restricted to the account and region where possible, except for \"ec2:Describe\" calls which require the arn to be a wildcard"
            },
            {
              "id": "F10",
              "reason": "The inline policy avoids a rare race condition between the lambda, Role and the policy resource creation."
            }
          ]
        }
      }
    },
    "DeploymentPlatformSetupScheduledMetricsLambdaRoleDefaultPolicy7CE81C15": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTelemetryRecords",
                "xray:PutTraceSegments"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "DeploymentPlatformSetupScheduledMetricsLambdaRoleDefaultPolicy7CE81C15",
        "Roles": [
          {
            "Ref": "DeploymentPlatformSetupScheduledMetricsLambdaRole89420F9F"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The wildcard permission is required to publish events for x-ray insights",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::*"
              ]
            }
          ]
        }
      }
    },
    "DeploymentPlatformSetupGenUUIDE08D47F0": {
      "Type": "Custom::GenUUID",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "DeploymentPlatformSetupInfraSetupCustomResource5473231F",
            "Arn"
          ]
        },
        "Resource": "GEN_UUID"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "DeploymentPlatformSetupOpsCustomDashboardC1C0C18E": {
      "Type": "AWS::CloudWatch::Dashboard",
      "Properties": {
        "DashboardBody": {
          "Fn::Join": [
            "",
            [
              "{\"start\":\"start\",\"end\":\"end\",\"periodOverride\":\"auto\",\"widgets\":[{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"REST Endpoint Hits\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/ApiGateway\",\"Count\",\"ApiName\",\"",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421"
                      }
                    ]
                  }
                ]
              },
              "-UseCaseManagementAPI\",{\"color\":\"#9467bd\",\"label\":\"Count\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"AWS/ApiGateway\",\"CacheHitCount\",\"ApiName\",\"",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421"
                      }
                    ]
                  }
                ]
              },
              "-UseCaseManagementAPI\",{\"color\":\"#2ca02c\",\"label\":\"CacheHitCount\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"AWS/ApiGateway\",\"CacheMissCount\",\"ApiName\",\"",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421"
                      }
                    ]
                  }
                ]
              },
              "-UseCaseManagementAPI\",{\"color\":\"#d62728\",\"label\":\"CacheMissCount\",\"period\":3600,\"stat\":\"SampleCount\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"REST Endpoint Latency Stats\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/ApiGateway\",\"Latency\",\"ApiName\",\"",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421"
                      }
                    ]
                  }
                ]
              },
              "-UseCaseManagementAPI\",{\"color\":\"#ff7f0e\",\"label\":\"AverageLatency\",\"period\":3600}],[\"AWS/ApiGateway\",\"IntegrationLatency\",\"ApiName\",\"",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421"
                      }
                    ]
                  }
                ]
              },
              "-UseCaseManagementAPI\",{\"color\":\"#1f77b4\",\"label\":\"MaxIntegrationLatency\",\"period\":3600,\"stat\":\"Maximum\"}],[\"AWS/ApiGateway\",\"Latency\",\"ApiName\",\"",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Ref": "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421"
                      }
                    ]
                  }
                ]
              },
              "-UseCaseManagementAPI\",{\"color\":\"#2ca02c\",\"label\":\"MaxLatency\",\"period\":3600,\"stat\":\"Maximum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":12,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Cognito Sign-ins & Sign-ups\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/Cognito\",\"SignInSuccesses\",\"UserPool\",\"",
              {
                "Fn::GetAtt": [
                  "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                  "Outputs.DeploymentPlatformCognitoSetupUserPoolId0A73EB1C"
                ]
              },
              "\",\"UserPoolClient\",\"",
              {
                "Fn::GetAtt": [
                  "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                  "Outputs.DeploymentPlatformCognitoSetupUserPoolClientIdFE2BD0AE"
                ]
              },
              "\",{\"color\":\"#1f77b4\",\"label\":\"SignInSuccessesCount\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"AWS/Cognito\",\"SignInSuccesses\",\"UserPool\",\"",
              {
                "Fn::GetAtt": [
                  "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                  "Outputs.DeploymentPlatformCognitoSetupUserPoolId0A73EB1C"
                ]
              },
              "\",\"UserPoolClient\",\"",
              {
                "Fn::GetAtt": [
                  "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                  "Outputs.DeploymentPlatformCognitoSetupUserPoolClientIdFE2BD0AE"
                ]
              },
              "\",{\"color\":\"#ff7f0e\",\"label\":\"AverageSignInSuccesses\",\"period\":3600}],[\"AWS/Cognito\",\"SignUpSuccesses\",\"UserPool\",\"",
              {
                "Fn::GetAtt": [
                  "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                  "Outputs.DeploymentPlatformCognitoSetupUserPoolId0A73EB1C"
                ]
              },
              "\",\"UserPoolClient\",\"Admin\",{\"color\":\"#7f7f7f\",\"label\":\"SignUpSuccessesCount\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"AWS/Cognito\",\"SignUpSuccesses\",\"UserPool\",\"",
              {
                "Fn::GetAtt": [
                  "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                  "Outputs.DeploymentPlatformCognitoSetupUserPoolId0A73EB1C"
                ]
              },
              "\",\"UserPoolClient\",\"Admin\",{\"color\":\"#9467bd\",\"label\":\"AverageSignUpSuccesses\",\"period\":3600}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":18,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Stack Deployment Status Stats\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"Solution/UseCaseDeployments\",\"UCInitiationSuccess\",\"service\",\"UseCaseManagement\",{\"color\":\"#1f77b4\",\"label\":\"UCInitiationSuccessCount\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"Solution/UseCaseDeployments\",\"UCInitiationFailure\",\"service\",\"UseCaseManagement\",{\"color\":\"#ff7f0e\",\"label\":\"UCInitiationFailureCount\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"Solution/UseCaseDeployments\",\"UCDeletionSuccess\",\"service\",\"UseCaseManagement\",{\"color\":\"#9467bd\",\"label\":\"UCDeletionSuccessCount\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"Solution/UseCaseDeployments\",\"UCDeletionFailure\",\"service\",\"UseCaseManagement\",{\"color\":\"#d62728\",\"label\":\"UCDeletionFailureCount\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"Solution/UseCaseDeployments\",\"UCUpdateSuccess\",\"service\",\"UseCaseManagement\",{\"color\":\"#2ca02c\",\"label\":\"UCUpdateSuccessCount\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"Solution/UseCaseDeployments\",\"UCUpdateFailure\",\"service\",\"UseCaseManagement\",{\"color\":\"#8c564b\",\"label\":\"UCUpdateFailureCount\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"Solution/UseCaseDeployments\",\"UCDescribeSuccess\",\"service\",\"UseCaseManagement\",{\"color\":\"#e377c2\",\"label\":\"UCDescribeSuccessCount\",\"period\":3600,\"stat\":\"SampleCount\"}],[\"Solution/UseCaseDeployments\",\"UCDescribeFailure\",\"service\",\"UseCaseManagement\",{\"color\":\"#7f7f7f\",\"label\":\"UCDescribeFailureCount\",\"period\":3600,\"stat\":\"SampleCount\"}]],\"yAxis\":{}}}]}"
            ]
          ]
        },
        "DashboardName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-",
              {
                "Ref": "AWS::Region"
              },
              "-Dashboard"
            ]
          ]
        }
      },
      "DeletionPolicy": "Delete",
      "Condition": "DeployCustomDashboard"
    },
    "DeploymentPlatformSetupWriteToSSMBE1096BE": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:DeleteParameter",
                "ssm:GetParameter",
                "ssm:PutParameter"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter/gaab-webconfig/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "DeploymentPlatformSetupWriteToSSMBE1096BE",
        "Roles": [
          {
            "Ref": "DeploymentPlatformSetupCustomResourceLambdaRole3C444A9D"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Permission is required to delete old webconfig ssm parameters",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:ssm:<AWS::Region>:<AWS::AccountId>:parameter/gaab-webconfig/*"
              ]
            }
          ]
        }
      }
    },
    "DeploymentPlatformSetupGetCognitoUserPoolInfo2A3390CD": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:DescribeUserPool",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":cognito-idp:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":userpool/",
                    {
                      "Fn::GetAtt": [
                        "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                        "Outputs.DeploymentPlatformCognitoSetupUserPoolId0A73EB1C"
                      ]
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "DeploymentPlatformSetupGetCognitoUserPoolInfo2A3390CD",
        "Roles": [
          {
            "Ref": "DeploymentPlatformSetupCustomResourceLambdaRole3C444A9D"
          }
        ]
      }
    },
    "DeploymentPlatformSetupSolutionHelperAnonymousData96B2086D": {
      "Type": "Custom::AnonymousData",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "DeploymentPlatformSetupInfraSetupCustomResource5473231F",
            "Arn"
          ]
        },
        "Resource": "ANONYMOUS_METRIC",
        "SolutionId": "SO0276",
        "Version": "v3.0.3",
        "UUID": {
          "Fn::GetAtt": [
            "DeploymentPlatformSetupGenUUIDE08D47F0",
            "UUID"
          ]
        },
        "VPC_ENABLED": {
          "Ref": "VpcEnabled"
        },
        "CREATE_VPC": {
          "Ref": "CreateNewVpc"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Condition": "AnonymousDataAWSCondition"
    },
    "VPCDeploymentPlatformVPCNestedStackDeploymentPlatformVPCNestedStackResource186D2208": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "CustomResourceLambdaArn": {
            "Fn::GetAtt": [
              "DeploymentPlatformSetupInfraSetupCustomResource5473231F",
              "Arn"
            ]
          },
          "CustomResourceRoleArn": {
            "Fn::GetAtt": [
              "DeploymentPlatformSetupCustomResourceLambdaRole3C444A9D",
              "Arn"
            ]
          },
          "AccessLoggingBucketArn": {
            "Fn::GetAtt": [
              "DeploymentPlatformSetupAccessLog67D5D503",
              "Arn"
            ]
          },
          "IPAMPoolId": {
            "Ref": "IPAMPoolId"
          },
          "referencetoDeploymentPlatformStackRegistrySetup483F1675Id": {
            "Fn::GetAtt": [
              "RegistrySetupCC2515F0",
              "Id"
            ]
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://solutions-reference.s3.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              "generative-ai-application-builder-on-aws/v3.0.3/DeploymentPlatformStackVPCDeploymentPlatformVPC42C65300.nested.template"
            ]
          ]
        }
      },
      "DependsOn": [
        "RegistrySetupCC2515F0"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:asset:path": "DeploymentPlatformStackVPCDeploymentPlatformVPC42C65300.nested.template.json",
        "aws:asset:property": "TemplateURL"
      },
      "Condition": "DeployVPCCondition"
    },
    "WebAppNestedStackWebAppNestedStackResource4E994CA7": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "CustomResourceLambdaArn": {
            "Fn::GetAtt": [
              "DeploymentPlatformSetupInfraSetupCustomResource5473231F",
              "Arn"
            ]
          },
          "CustomResourceRoleArn": {
            "Fn::GetAtt": [
              "DeploymentPlatformSetupCustomResourceLambdaRole3C444A9D",
              "Arn"
            ]
          },
          "AccessLoggingBucketArn": {
            "Fn::GetAtt": [
              "DeploymentPlatformSetupAccessLog67D5D503",
              "Arn"
            ]
          },
          "UseCaseUUID": {
            "Fn::GetAtt": [
              "DeploymentPlatformSetupGenUUIDE08D47F0",
              "UUID"
            ]
          },
          "referencetoDeploymentPlatformStackRegistrySetup483F1675Id": {
            "Fn::GetAtt": [
              "RegistrySetupCC2515F0",
              "Id"
            ]
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://solutions-reference.s3.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              "generative-ai-application-builder-on-aws/v3.0.3/DeploymentPlatformStackWebApp990B70E2.nested.template"
            ]
          ]
        }
      },
      "DependsOn": [
        "DeploymentPlatformSetupAccessLogPolicy2FB262B2",
        "RegistrySetupCC2515F0"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:asset:path": "DeploymentPlatformStackWebApp990B70E2.nested.template.json",
        "aws:asset:property": "TemplateURL"
      },
      "Condition": "DeployWebAppUIInfrastructureCondition"
    },
    "DeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResourceF56260D3": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "CustomResourceLambdaArn": {
            "Fn::GetAtt": [
              "DeploymentPlatformSetupInfraSetupCustomResource5473231F",
              "Arn"
            ]
          },
          "CustomResourceRoleArn": {
            "Fn::GetAtt": [
              "DeploymentPlatformSetupCustomResourceLambdaRole3C444A9D",
              "Arn"
            ]
          },
          "AccessLoggingBucketArn": {
            "Fn::GetAtt": [
              "DeploymentPlatformSetupAccessLog67D5D503",
              "Arn"
            ]
          },
          "referencetoDeploymentPlatformStackRegistrySetup483F1675Id": {
            "Fn::GetAtt": [
              "RegistrySetupCC2515F0",
              "Id"
            ]
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://solutions-reference.s3.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              "generative-ai-application-builder-on-aws/v3.0.3/DeploymentPlatformStackDeploymentPlatformStorage5B30492E.nested.template"
            ]
          ]
        }
      },
      "DependsOn": [
        "RegistrySetupCC2515F0"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:asset:path": "DeploymentPlatformStackDeploymentPlatformStorage5B30492E.nested.template.json",
        "aws:asset:property": "TemplateURL"
      }
    },
    "DeploymentPlatformStorageDDBUCMLPolicy9154E8BF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:Batch*",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DeleteItem",
                "dynamodb:Get*",
                "dynamodb:PutItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:UpdateItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResourceF56260D3",
                    "Outputs.DeploymentPlatformStackDeploymentPlatformStorageLLMConfigTable9EB214F1Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "DeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResourceF56260D3",
                    "Outputs.DeploymentPlatformStackDeploymentPlatformStorageModelInfoStorageModelInfoStore6E739C0DArn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "DeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResourceF56260D3",
                    "Outputs.DeploymentPlatformStackDeploymentPlatformStorageUseCasesTable8AE1DCF5Arn"
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "DeploymentPlatformStorageDDBUCMLPolicy9154E8BF",
        "Roles": [
          {
            "Fn::GetAtt": [
              "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
              "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementUCMLRole7D6F4C25Ref"
            ]
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The IAM role allows the Lambda function to create, delete table. Table name is not known",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Action::dynamodb:Batch*",
                "Action::dynamodb:Get*"
              ]
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "DefaultUserEmail": {
            "Ref": "AdminUserEmail"
          },
          "ApplicationTrademarkName": "Generative AI Application Builder on AWS",
          "WebConfigSSMKey": {
            "Fn::Join": [
              "",
              [
                "/gaab-webconfig/",
                {
                  "Ref": "AWS::StackName"
                }
              ]
            ]
          },
          "CustomResourceLambdaArn": {
            "Fn::GetAtt": [
              "DeploymentPlatformSetupInfraSetupCustomResource5473231F",
              "Arn"
            ]
          },
          "CustomResourceRoleArn": {
            "Fn::GetAtt": [
              "DeploymentPlatformSetupCustomResourceLambdaRole3C444A9D",
              "Arn"
            ]
          },
          "ExistingSecurityGroupIds": {
            "Fn::If": [
              "DeployVPCCondition",
              {
                "Fn::GetAtt": [
                  "VPCDeploymentPlatformVPCNestedStackDeploymentPlatformVPCNestedStackResource186D2208",
                  "Outputs.SecurityGroupIds"
                ]
              },
              {
                "Fn::Join": [
                  ",",
                  {
                    "Ref": "ExistingSecurityGroupIds"
                  }
                ]
              }
            ]
          },
          "ExistingPrivateSubnetIds": {
            "Fn::If": [
              "DeployVPCCondition",
              {
                "Fn::GetAtt": [
                  "VPCDeploymentPlatformVPCNestedStackDeploymentPlatformVPCNestedStackResource186D2208",
                  "Outputs.PrivateSubnetIds"
                ]
              },
              {
                "Fn::Join": [
                  ",",
                  {
                    "Ref": "ExistingPrivateSubnetIds"
                  }
                ]
              }
            ]
          },
          "CognitoDomainPrefix": {
            "Ref": "CognitoDomainPrefix"
          },
          "CloudFrontUrl": {
            "Fn::If": [
              "DeployWebAppUIInfrastructureCondition",
              {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Fn::GetAtt": [
                        "WebAppNestedStackWebAppNestedStackResource4E994CA7",
                        "Outputs.DeploymentPlatformStackWebAppWebsiteUICloudFrontDistribution38CBCDC5DomainName"
                      ]
                    }
                  ]
                ]
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          "DeployUI": {
            "Ref": "DeployUI"
          },
          "AccessLoggingBucketArn": {
            "Fn::GetAtt": [
              "DeploymentPlatformSetupAccessLog67D5D503",
              "Arn"
            ]
          },
          "ExistingCognitoUserPoolId": {
            "Ref": "ExistingCognitoUserPoolId"
          },
          "ExistingCognitoUserPoolClientId": {
            "Ref": "ExistingCognitoUserPoolClient"
          },
          "referencetoDeploymentPlatformStackDeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResource0080A447OutputsDeploymentPlatformStackDeploymentPlatformStorageUseCasesTable8AE1DCF5Ref": {
            "Fn::GetAtt": [
              "DeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResourceF56260D3",
              "Outputs.DeploymentPlatformStackDeploymentPlatformStorageUseCasesTable8AE1DCF5Ref"
            ]
          },
          "referencetoDeploymentPlatformStackDeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResource0080A447OutputsDeploymentPlatformStackDeploymentPlatformStorageModelInfoStorageModelInfoStore6E739C0DRef": {
            "Fn::GetAtt": [
              "DeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResourceF56260D3",
              "Outputs.DeploymentPlatformStackDeploymentPlatformStorageModelInfoStorageModelInfoStore6E739C0DRef"
            ]
          },
          "referencetoDeploymentPlatformStackDeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResource0080A447OutputsDeploymentPlatformStackDeploymentPlatformStorageLLMConfigTable9EB214F1Ref": {
            "Fn::GetAtt": [
              "DeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResourceF56260D3",
              "Outputs.DeploymentPlatformStackDeploymentPlatformStorageLLMConfigTable9EB214F1Ref"
            ]
          },
          "referencetoDeploymentPlatformStackAwsNodeSdkLayer390CBFFFRef": {
            "Ref": "AwsNodeSdkLayer42C7A59C"
          },
          "referencetoDeploymentPlatformStackNodeUserAgentLayer24384C79Ref": {
            "Ref": "NodeUserAgentLayer02526341"
          },
          "referencetoDeploymentPlatformStackDeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResource0080A447OutputsDeploymentPlatformStackDeploymentPlatformStorageModelInfoStorageModelInfoStore6E739C0DArn": {
            "Fn::GetAtt": [
              "DeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResourceF56260D3",
              "Outputs.DeploymentPlatformStackDeploymentPlatformStorageModelInfoStorageModelInfoStore6E739C0DArn"
            ]
          },
          "referencetoDeploymentPlatformStackRegistrySetup483F1675Id": {
            "Fn::GetAtt": [
              "RegistrySetupCC2515F0",
              "Id"
            ]
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://solutions-reference.s3.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              "generative-ai-application-builder-on-aws/v3.0.3/DeploymentPlatformStackUseCaseManagementSetupUseCaseManagement4D56BB38.nested.template"
            ]
          ]
        }
      },
      "DependsOn": [
        "RegistrySetupCC2515F0"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:asset:path": "DeploymentPlatformStackUseCaseManagementSetupUseCaseManagement4D56BB38.nested.template.json",
        "aws:asset:property": "TemplateURL"
      }
    },
    "UseCaseManagementSetupRequestProcessorRestAuthorizerRole9B42FEFC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "logs:PutLogEvents",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*:log-stream:*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*"
              ]
            },
            {
              "reason": "Lambda function has the required permission to write CloudWatch Log streams. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*:log-stream:*"
              ]
            },
            {
              "reason": "Even though the resource is \"*\", the actions have been scoped down only to the ones required by the solution",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Action::ec2:*ssignPrivateIpAddresses",
                "Action::ec2:De*NetworkInterface"
              ]
            },
            {
              "reason": "Lambda authorizer needs to describe any user pool to validate tokens from multiple user pools. Additional scoping down is found in the authorizer",
              "id": "AwsSolutions-IAM5"
            }
          ]
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "The exact resource arn is unknown at this time. Hence wildcard. The arns are have been restricted to the account and region where possible, except for \"ec2:Describe\" calls which require the arn to be a wildcard"
            },
            {
              "id": "W12",
              "reason": "The exact resource arn is unknown at this time. Hence wildcard. The arns are have been restricted to the account and region where possible, except for \"ec2:Describe\" calls which require the arn to be a wildcard"
            },
            {
              "id": "W13",
              "reason": "The exact resource arn is unknown at this time. Hence wildcard. The arns are have been restricted to the account and region where possible, except for \"ec2:Describe\" calls which require the arn to be a wildcard"
            },
            {
              "id": "F10",
              "reason": "The inline policy avoids a rare race condition between the lambda, Role and the policy resource creation."
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorRestAuthorizerRoleDefaultPolicy2312A063": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:cognito-idp:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":userpool/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UseCaseManagementSetupRequestProcessorRestAuthorizerRoleDefaultPolicy2312A063",
        "Roles": [
          {
            "Ref": "UseCaseManagementSetupRequestProcessorRestAuthorizerRole9B42FEFC"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Lambda authorizer needs to describe any user pool to validate tokens from multiple user pools. Additional scoping down is found in the authorizer",
              "id": "AwsSolutions-IAM5"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestAuthorizer2B81EC22": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "generative-ai-application-builder-on-aws/v3.0.3/assete9dcac7e3090cc0471b642871c990e320bd8859f7b1b36be6890d056ce26264c.zip"
        },
        "Description": "Authorizes REST API requests based on Cognito user pool groups",
        "Environment": {
          "Variables": {
            "USER_POOL_ID": {
              "Fn::GetAtt": [
                "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                "Outputs.DeploymentPlatformCognitoSetupUserPoolId0A73EB1C"
              ]
            },
            "CLIENT_ID": {
              "Fn::GetAtt": [
                "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                "Outputs.DeploymentPlatformCognitoSetupUserPoolClientIdFE2BD0AE"
              ]
            },
            "COGNITO_POLICY_TABLE_NAME": {
              "Fn::GetAtt": [
                "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                "Outputs.DeploymentPlatformCognitoSetupCognitoGroupPolicyTableName0C5E8F79"
              ]
            },
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": [[\"AWSSOLUTION/SO0276/v3.0.3\"]] }",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "rest-authorizer.handler",
        "Layers": [
          {
            "Ref": "AwsNodeSdkLayer42C7A59C"
          },
          {
            "Ref": "NodeUserAgentLayer02526341"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupRequestProcessorRestAuthorizerRole9B42FEFC",
            "Arn"
          ]
        },
        "Runtime": "nodejs22.x",
        "Timeout": 900
      },
      "DependsOn": [
        "UseCaseManagementSetupRequestProcessorRestAuthorizerRoleDefaultPolicy2312A063",
        "UseCaseManagementSetupRequestProcessorRestAuthorizerRole9B42FEFC"
      ],
      "Metadata": {
        "aws:asset:path": "asset.e9dcac7e3090cc0471b642871c990e320bd8859f7b1b36be6890d056ce26264c",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W89",
              "reason": "VPC deployment is not enforced. This REST authorizer is not configured within a VPC"
            },
            {
              "id": "W92",
              "reason": "The solution does not enforce reserved concurrency"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestAuthorizerDeploymentPlatformStackUseCaseManagementSetupRequestProcessorRestCustomRequestAuthorizer537B59D4Permissions3FBB7A58": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupRequestProcessorDeploymentRestAuthorizer2B81EC22",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/authorizers/",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorRestCustomRequestAuthorizerCDD89059"
              }
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestAuthorizerAPIGatewayInvoke7E420FA2": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupRequestProcessorDeploymentRestAuthorizer2B81EC22",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorRestAuthLogRetention78B8FC64": {
      "Type": "Custom::CW_LOG_RETENTION",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "DeploymentPlatformSetupInfraSetupCustomResource5473231F",
            "Arn"
          ]
        },
        "FunctionName": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestAuthorizer2B81EC22"
        },
        "Resource": "CW_LOG_RETENTION"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "UseCaseManagementSetupRequestProcessorLambdaPolicyTablePolicy835B4D04": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetItem",
                "dynamodb:Query"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:dynamodb:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":table/",
                    {
                      "Fn::GetAtt": [
                        "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                        "Outputs.DeploymentPlatformCognitoSetupCognitoGroupPolicyTableName0C5E8F79"
                      ]
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UseCaseManagementSetupRequestProcessorLambdaPolicyTablePolicy835B4D04",
        "Roles": [
          {
            "Ref": "UseCaseManagementSetupRequestProcessorRestAuthorizerRole9B42FEFC"
          }
        ]
      }
    },
    "UseCaseManagementSetupRequestProcessorRestCustomRequestAuthorizerCDD89059": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "AuthorizerResultTtlInSeconds": 0,
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "UseCaseManagementSetupRequestProcessorDeploymentRestAuthorizer2B81EC22",
                          "Arn"
                        ]
                      }
                    ]
                  }
                ]
              },
              ":apigateway:",
              {
                "Fn::Select": [
                  3,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "UseCaseManagementSetupRequestProcessorDeploymentRestAuthorizer2B81EC22",
                          "Arn"
                        ]
                      }
                    ]
                  }
                ]
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "UseCaseManagementSetupRequestProcessorDeploymentRestAuthorizer2B81EC22",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        },
        "IdentitySource": "method.request.header.Authorization",
        "Name": "DeploymentPlatformStackUseCaseManagementSetupRequestProcessorRestCustomRequestAuthorizer537B59D4",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        },
        "Type": "REQUEST"
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointApiAccessLogGroupFB4EFA7D": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 3653
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "API endpoint to access use case management functions",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-UseCaseManagementAPI"
            ]
          ]
        }
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W87",
              "reason": "Since caching is not enabled, cache encryption is also not enabled"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiDeployment8CA28FB1a9b78346e213302778bfd9542d49f78f": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "Description": "API endpoint to access use case management functions",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "DependsOn": [
        "UseCaseManagementSetupFeedbackSetupStackNestedStackFeedbackSetupStackNestedStackResourceCA537136",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointBadRequestBodyResponseEF90EA9F",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointBadRequestDefaultResponseE22C6436",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointBadRequestParametersResponse97FE3D57",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseIdDELETE1F46F92B",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseIdGET49E7D36E",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseIdOPTIONS34A36241",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseIdPATCHB08FB161",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseId1B4DA213",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsGET93EE3992",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsOPTIONS226E9606",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsPOST68876F12",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsBB1D9109",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApifeedbackuseCaseIdOPTIONS144DB212",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApifeedbackuseCaseIdPOST3C555B45",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApifeedbackuseCaseIdEE4BB80E",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApifeedback61DB2B5B",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNamemodelIdGET1CDDE10A",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNamemodelIdOPTIONS7646D3AE",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNamemodelId88C0A3B5",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNameGET6D685A8B",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNameOPTIONS481D07FD",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNameC996A9BE",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeprovidersGET54F880DB",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeprovidersOPTIONSDD79CF85",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeprovidersD9729BFA",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeCC855208",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfo471EE02C",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfousecasetypesGETFE1D2400",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfousecasetypesOPTIONSA2D8A0E9",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfousecasetypes44F4208C",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeployUseCaseApiBodyModel2E7FF7C8",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeployUseCaseResponseModel053210C2",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointInternalServerErrorDefaultResponse973BC431",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointRequestValidator38E09551",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointUpdateUseCaseApiBodyModel556ECDCC",
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointUpdateUseCaseResponseModel43C6C5F9",
        "UseCaseManagementSetupRequestProcessorRestCustomRequestAuthorizerCDD89059"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checks for it in AWS::ApiGateway::Deployment resource"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiDeploymentStageprodE2564A5F": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "AccessLogSetting": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointApiAccessLogGroupFB4EFA7D",
              "Arn"
            ]
          },
          "Format": "$context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] \"$context.httpMethod $context.resourcePath $context.protocol\" $context.status $context.responseLength $context.requestId"
        },
        "DeploymentId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiDeployment8CA28FB1a9b78346e213302778bfd9542d49f78f"
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": false,
            "HttpMethod": "*",
            "LoggingLevel": "OFF",
            "MetricsEnabled": true,
            "ResourcePath": "/*",
            "ThrottlingBurstLimit": 5,
            "ThrottlingRateLimit": 5
          }
        ],
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        },
        "StageName": "prod",
        "TracingEnabled": true
      },
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "API_GW_CACHE_ENABLED_AND_ENCRYPTED"
          ]
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Turning off execution logs as recommended best practice in the ApiGateway service documentation",
              "id": "AwsSolutions-APIG6"
            }
          ]
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W87",
              "reason": "Caching is not configured for this endpoint, hence CacheEncryption configurations don't apply"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsBB1D9109": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F",
            "RootResourceId"
          ]
        },
        "PathPart": "deployments",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseId1B4DA213": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsBB1D9109"
        },
        "PathPart": "{useCaseId}",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseIdOPTIONS34A36241": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type, Access-Control-Allow-Headers, X-Requested-With, Authorization'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,PATCH,DELETE,OPTIONS'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseId1B4DA213"
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "A Custom authorizer must be used in order to authenticate using Cognito user groups",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseIdPATCHApiPermissionDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLaEFA75A42": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementUseCaseMgmt7269A93AArn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiDeploymentStageprodE2564A5F"
              },
              "/PATCH/deployments/*"
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseIdPATCHApiPermissionTestDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPoiF45B02D6": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementUseCaseMgmt7269A93AArn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/test-invoke-stage/PATCH/deployments/*"
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseIdPATCHB08FB161": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "UseCaseManagementSetupRequestProcessorRestCustomRequestAuthorizerCDD89059"
        },
        "HttpMethod": "PATCH",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                    "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementUseCaseMgmt7269A93AArn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointUpdateUseCaseResponseModel43C6C5F9"
              }
            },
            "StatusCode": "200"
          }
        ],
        "OperationName": "UpdateUseCase",
        "RequestModels": {
          "application/json": {
            "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointUpdateUseCaseApiBodyModel556ECDCC"
          }
        },
        "RequestParameters": {
          "method.request.header.authorization": true
        },
        "RequestValidatorId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointRequestValidator38E09551"
        },
        "ResourceId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseId1B4DA213"
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "A Custom authorizer must be used in order to authenticate using Cognito user groups",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseIdDELETEApiPermissionDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLC92042FA": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementUseCaseMgmt7269A93AArn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiDeploymentStageprodE2564A5F"
              },
              "/DELETE/deployments/*"
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseIdDELETEApiPermissionTestDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPoF340F832": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementUseCaseMgmt7269A93AArn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/test-invoke-stage/DELETE/deployments/*"
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseIdDELETE1F46F92B": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "UseCaseManagementSetupRequestProcessorRestCustomRequestAuthorizerCDD89059"
        },
        "HttpMethod": "DELETE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                    "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementUseCaseMgmt7269A93AArn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "OperationName": "DeleteUseCase",
        "RequestParameters": {
          "method.request.querystring.permanent": false,
          "method.request.header.authorization": true
        },
        "RequestValidatorId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointRequestValidator38E09551"
        },
        "ResourceId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseId1B4DA213"
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "A Custom authorizer must be used in order to authenticate using Cognito user groups",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseIdGETApiPermissionDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLamb2FB1BC7D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementUseCaseMgmt7269A93AArn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiDeploymentStageprodE2564A5F"
              },
              "/GET/deployments/*"
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseIdGETApiPermissionTestDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointD9FCB66E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementUseCaseMgmt7269A93AArn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/test-invoke-stage/GET/deployments/*"
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseIdGET49E7D36E": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "UseCaseManagementSetupRequestProcessorRestCustomRequestAuthorizerCDD89059"
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                    "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementUseCaseMgmt7269A93AArn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "OperationName": "GetUseCase",
        "RequestParameters": {
          "method.request.header.authorization": true
        },
        "RequestValidatorId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointRequestValidator38E09551"
        },
        "ResourceId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsuseCaseId1B4DA213"
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "A Custom authorizer must be used in order to authenticate using Cognito user groups",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsOPTIONS226E9606": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type, Access-Control-Allow-Headers, X-Requested-With, Authorization'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'POST,GET,OPTIONS'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsBB1D9109"
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "A Custom authorizer must be used in order to authenticate using Cognito user groups",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsGETApiPermissionDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApi80725706": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementUseCaseMgmt7269A93AArn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiDeploymentStageprodE2564A5F"
              },
              "/GET/deployments"
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsGETApiPermissionTestDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRes1B0F83BA": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementUseCaseMgmt7269A93AArn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/test-invoke-stage/GET/deployments"
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsGET93EE3992": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "UseCaseManagementSetupRequestProcessorRestCustomRequestAuthorizerCDD89059"
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                    "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementUseCaseMgmt7269A93AArn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "OperationName": "GetUseCases",
        "RequestParameters": {
          "method.request.querystring.pageNumber": true,
          "method.request.querystring.searchFilter": false,
          "method.request.header.authorization": true
        },
        "RequestValidatorId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointRequestValidator38E09551"
        },
        "ResourceId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsBB1D9109"
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "A Custom authorizer must be used in order to authenticate using Cognito user groups",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsPOSTApiPermissionDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestAp2440C5F6": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementUseCaseMgmt7269A93AArn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiDeploymentStageprodE2564A5F"
              },
              "/POST/deployments"
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsPOSTApiPermissionTestDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaReB233F758": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementUseCaseMgmt7269A93AArn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/test-invoke-stage/POST/deployments"
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsPOST68876F12": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "UseCaseManagementSetupRequestProcessorRestCustomRequestAuthorizerCDD89059"
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                    "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementUseCaseMgmt7269A93AArn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeployUseCaseResponseModel053210C2"
              }
            },
            "StatusCode": "200"
          }
        ],
        "OperationName": "DeployUseCase",
        "RequestModels": {
          "application/json": {
            "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeployUseCaseApiBodyModel2E7FF7C8"
          }
        },
        "RequestParameters": {
          "method.request.header.authorization": true
        },
        "RequestValidatorId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointRequestValidator38E09551"
        },
        "ResourceId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApideploymentsBB1D9109"
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "A Custom authorizer must be used in order to authenticate using Cognito user groups",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfo471EE02C": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F",
            "RootResourceId"
          ]
        },
        "PathPart": "model-info",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfousecasetypes44F4208C": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfo471EE02C"
        },
        "PathPart": "use-case-types",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfousecasetypesOPTIONSA2D8A0E9": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type, Access-Control-Allow-Headers, X-Requested-With, Authorization'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfousecasetypes44F4208C"
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "A Custom authorizer must be used in order to authenticate using Cognito user groups",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfousecasetypesGETApiPermissionDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLam318D8722": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementModelInfo57CA1403Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiDeploymentStageprodE2564A5F"
              },
              "/GET/model-info/use-case-types"
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfousecasetypesGETApiPermissionTestDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPoin17A94506": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementModelInfo57CA1403Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/test-invoke-stage/GET/model-info/use-case-types"
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfousecasetypesGETFE1D2400": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "UseCaseManagementSetupRequestProcessorRestCustomRequestAuthorizerCDD89059"
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                    "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementModelInfo57CA1403Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "OperationName": "GetUseCaseTypes",
        "RequestParameters": {
          "method.request.header.authorization": true
        },
        "RequestValidatorId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointRequestValidator38E09551"
        },
        "ResourceId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfousecasetypes44F4208C"
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "A Custom authorizer must be used in order to authenticate using Cognito user groups",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeCC855208": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfo471EE02C"
        },
        "PathPart": "{useCaseType}",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeprovidersD9729BFA": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeCC855208"
        },
        "PathPart": "providers",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeprovidersOPTIONSDD79CF85": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type, Access-Control-Allow-Headers, X-Requested-With, Authorization'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeprovidersD9729BFA"
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "A Custom authorizer must be used in order to authenticate using Cognito user groups",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeprovidersGETApiPermissionDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEnd6FD79C86": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementModelInfo57CA1403Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiDeploymentStageprodE2564A5F"
              },
              "/GET/model-info/*/providers"
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeprovidersGETApiPermissionTestDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRes99FB5804": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementModelInfo57CA1403Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/test-invoke-stage/GET/model-info/*/providers"
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeprovidersGET54F880DB": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "UseCaseManagementSetupRequestProcessorRestCustomRequestAuthorizerCDD89059"
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                    "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementModelInfo57CA1403Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "OperationName": "GetModelProviders",
        "RequestParameters": {
          "method.request.header.authorization": true
        },
        "RequestValidatorId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointRequestValidator38E09551"
        },
        "ResourceId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeprovidersD9729BFA"
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "A Custom authorizer must be used in order to authenticate using Cognito user groups",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNameC996A9BE": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeCC855208"
        },
        "PathPart": "{providerName}",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNameOPTIONS481D07FD": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type, Access-Control-Allow-Headers, X-Requested-With, Authorization'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNameC996A9BE"
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "A Custom authorizer must be used in order to authenticate using Cognito user groups",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNameGETApiPermissionDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestB185C368": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementModelInfo57CA1403Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiDeploymentStageprodE2564A5F"
              },
              "/GET/model-info/*/*"
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNameGETApiPermissionTestDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeployment5EF8DE70": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementModelInfo57CA1403Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/test-invoke-stage/GET/model-info/*/*"
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNameGET6D685A8B": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "UseCaseManagementSetupRequestProcessorRestCustomRequestAuthorizerCDD89059"
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                    "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementModelInfo57CA1403Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "OperationName": "GetModels",
        "RequestParameters": {
          "method.request.header.authorization": true
        },
        "RequestValidatorId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointRequestValidator38E09551"
        },
        "ResourceId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNameC996A9BE"
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "A Custom authorizer must be used in order to authenticate using Cognito user groups",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNamemodelId88C0A3B5": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNameC996A9BE"
        },
        "PathPart": "{modelId}",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNamemodelIdOPTIONS7646D3AE": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type, Access-Control-Allow-Headers, X-Requested-With, Authorization'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNamemodelId88C0A3B5"
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "A Custom authorizer must be used in order to authenticate using Cognito user groups",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNamemodelIdGETApiPermissionDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymAD282245": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementModelInfo57CA1403Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiDeploymentStageprodE2564A5F"
              },
              "/GET/model-info/*/*/*"
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNamemodelIdGETApiPermissionTestDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDep21F372CE": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementModelInfo57CA1403Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/test-invoke-stage/GET/model-info/*/*/*"
            ]
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNamemodelIdGET1CDDE10A": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "UseCaseManagementSetupRequestProcessorRestCustomRequestAuthorizerCDD89059"
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                    "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementModelInfo57CA1403Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "OperationName": "GetModelInfo",
        "RequestParameters": {
          "method.request.header.authorization": true
        },
        "RequestValidatorId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointRequestValidator38E09551"
        },
        "ResourceId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApimodelinfouseCaseTypeproviderNamemodelId88C0A3B5"
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "A Custom authorizer must be used in order to authenticate using Cognito user groups",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApifeedback61DB2B5B": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F",
            "RootResourceId"
          ]
        },
        "PathPart": "feedback",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "Condition": "CreateFeedbackResources"
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApifeedbackuseCaseIdEE4BB80E": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApifeedback61DB2B5B"
        },
        "PathPart": "{useCaseId}",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "Condition": "CreateFeedbackResources"
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApifeedbackuseCaseIdOPTIONS144DB212": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type, Access-Control-Allow-Headers, X-Requested-With, Authorization'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApifeedbackuseCaseIdEE4BB80E"
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "Condition": "CreateFeedbackResources"
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApifeedbackuseCaseIdPOSTApiPermissionDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaC894672C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupFeedbackSetupStackNestedStackFeedbackSetupStackNestedStackResourceCA537136",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupFeedbackSetupStackFeedbackManagementLambdaD5D27D85Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiDeploymentStageprodE2564A5F"
              },
              "/POST/feedback/*"
            ]
          ]
        }
      },
      "Condition": "CreateFeedbackResources"
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApifeedbackuseCaseIdPOSTApiPermissionTestDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLaA104131F": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupFeedbackSetupStackNestedStackFeedbackSetupStackNestedStackResourceCA537136",
            "Outputs.DeploymentPlatformStackUseCaseManagementSetupFeedbackSetupStackFeedbackManagementLambdaD5D27D85Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/test-invoke-stage/POST/feedback/*"
            ]
          ]
        }
      },
      "Condition": "CreateFeedbackResources"
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApifeedbackuseCaseIdPOST3C555B45": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "UseCaseManagementSetupRequestProcessorRestCustomRequestAuthorizerCDD89059"
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UseCaseManagementSetupFeedbackSetupStackNestedStackFeedbackSetupStackNestedStackResourceCA537136",
                    "Outputs.DeploymentPlatformStackUseCaseManagementSetupFeedbackSetupStackFeedbackManagementLambdaD5D27D85Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "OperationName": "SubmitFeedback",
        "RequestModels": {
          "application/json": {
            "Fn::GetAtt": [
              "UseCaseManagementSetupFeedbackSetupStackNestedStackFeedbackSetupStackNestedStackResourceCA537136",
              "Outputs.DeploymentPlatformStackUseCaseManagementSetupFeedbackSetupStackProvideFeedbackApiRequestModelFAFB6D72Ref"
            ]
          }
        },
        "RequestParameters": {
          "method.request.header.authorization": true
        },
        "RequestValidatorId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointRequestValidator38E09551"
        },
        "ResourceId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApifeedbackuseCaseIdEE4BB80E"
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "A Custom authorizer must be used in order to authenticate using Cognito user groups",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      },
      "Condition": "CreateFeedbackResources"
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiUsagePlanD00ABF48": {
      "Type": "AWS::ApiGateway::UsagePlan",
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
            },
            "Stage": {
              "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiDeploymentStageprodE2564A5F"
            },
            "Throttle": {}
          }
        ]
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiCloudWatchRole15571B15": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:FilterLogEvents",
                    "logs:GetLogEvents",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy"
          }
        ]
      },
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "IAM_NO_INLINE_POLICY_CHECK"
          ]
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Permission generated by the ApiGatewayToLambda construct to allow CloudWatch Logs to be used",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:*"
              ]
            }
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiAccount38FC82FE": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiCloudWatchRole15571B15",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
      ]
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointRequestValidator38E09551": {
      "Type": "AWS::ApiGateway::RequestValidator",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-api-request-validator"
            ]
          ]
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        },
        "ValidateRequestBody": true,
        "ValidateRequestParameters": true
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentPlatformEndpointWafDeploymentPlatformEndpointWafWebACL048DBCBA": {
      "Type": "AWS::WAFv2::WebACL",
      "Properties": {
        "CustomResponseBodies": {
          "HeadersNotAllowed": {
            "Content": "One of your injected headers is not allowed",
            "ContentType": "TEXT_PLAIN"
          }
        },
        "DefaultAction": {
          "Allow": {}
        },
        "Rules": [
          {
            "Name": "AWS-AWSManagedRulesBotControlRuleSet",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 0,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesBotControlRuleSet",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesBotControlRuleSet",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": "AWS-AWSManagedRulesKnownBadInputsRuleSet",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 1,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesKnownBadInputsRuleSet",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesKnownBadInputsRuleSet",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": "AWS-AWSManagedRulesCommonRuleSet",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 2,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesCommonRuleSet",
                "RuleActionOverrides": [
                  {
                    "ActionToUse": {
                      "Count": {}
                    },
                    "Name": "SizeRestrictions_BODY"
                  }
                ],
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesCommonRuleSet",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": "AWS-AWSManagedRulesAnonymousIpList",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 3,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesAnonymousIpList",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesAnonymousIpList",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": "AWS-AWSManagedRulesAmazonIpReputationList",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 4,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesAmazonIpReputationList",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesAmazonIpReputationList",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": "AWS-AWSManagedRulesAdminProtectionRuleSet",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 5,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesAdminProtectionRuleSet",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesAdminProtectionRuleSet",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": "AWS-AWSManagedRulesSQLiRuleSet",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 6,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesSQLiRuleSet",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesSQLiRuleSet",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Action": {
              "Block": {
                "CustomResponse": {
                  "CustomResponseBodyKey": "HeadersNotAllowed",
                  "ResponseCode": 403
                }
              }
            },
            "Name": "Custom-BlockRequestHeaders",
            "Priority": 7,
            "Statement": {
              "SizeConstraintStatement": {
                "ComparisonOperator": "GE",
                "FieldToMatch": {
                  "SingleHeader": {
                    "Name": "x-amzn-requestid"
                  }
                },
                "Size": 0,
                "TextTransformations": [
                  {
                    "Priority": 0,
                    "Type": "NONE"
                  }
                ]
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "Custom-BlockRequestHeaders",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Action": {
              "Block": {}
            },
            "Name": "Custom-BlockOversizedBodyNotInDeploy",
            "Priority": 8,
            "Statement": {
              "AndStatement": {
                "Statements": [
                  {
                    "LabelMatchStatement": {
                      "Key": "awswaf:managed:aws:core-rule-set:SizeRestrictions_Body",
                      "Scope": "LABEL"
                    }
                  },
                  {
                    "NotStatement": {
                      "Statement": {
                        "OrStatement": {
                          "Statements": [
                            {
                              "ByteMatchStatement": {
                                "FieldToMatch": {
                                  "UriPath": {}
                                },
                                "PositionalConstraint": "ENDS_WITH",
                                "SearchString": "/deployments",
                                "TextTransformations": [
                                  {
                                    "Priority": 0,
                                    "Type": "NONE"
                                  }
                                ]
                              }
                            },
                            {
                              "RegexMatchStatement": {
                                "FieldToMatch": {
                                  "UriPath": {}
                                },
                                "RegexString": "/deployments/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                                "TextTransformations": [
                                  {
                                    "Priority": 0,
                                    "Type": "NONE"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "Custom-BlockOversizedBodyNotInDeploy",
              "SampledRequestsEnabled": true
            }
          }
        ],
        "Scope": "REGIONAL",
        "VisibilityConfig": {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "webACL",
          "SampledRequestsEnabled": true
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentPlatformEndpointWafWebACLAssociation37A5F031": {
      "Type": "AWS::WAFv2::WebACLAssociation",
      "Properties": {
        "ResourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region"
              },
              "::/restapis/",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/stages/",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiDeploymentStageprodE2564A5F"
              }
            ]
          ]
        },
        "WebACLArn": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentPlatformEndpointWafDeploymentPlatformEndpointWafWebACL048DBCBA",
            "Arn"
          ]
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointBadRequestDefaultResponseE22C6436": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Headers": "'*'"
        },
        "ResponseType": "DEFAULT_4XX",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        },
        "StatusCode": "400"
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointInternalServerErrorDefaultResponse973BC431": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Headers": "'*'"
        },
        "ResponseType": "DEFAULT_5XX",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        },
        "StatusCode": "400"
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointBadRequestBodyResponseEF90EA9F": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Headers": "'*'"
        },
        "ResponseTemplates": {
          "application/json": "{\"error\":{\"message\":\"$context.error.messageString\",\"errors\":\"$context.error.validationErrorString\"}}"
        },
        "ResponseType": "BAD_REQUEST_BODY",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        },
        "StatusCode": "400"
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointBadRequestParametersResponse97FE3D57": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Headers": "'*'"
        },
        "ResponseTemplates": {
          "application/json": "{\"error\":{\"message\":\"$context.error.messageString\",\"errors\":\"$context.error.validationErrorString\"}}"
        },
        "ResponseType": "BAD_REQUEST_PARAMETERS",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        },
        "StatusCode": "400"
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeployUseCaseApiBodyModel2E7FF7C8": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "ContentType": "application/json",
        "Description": "Defines the required JSON structure of the POST request to deploy a use case",
        "Name": "DeployUseCaseApiBodyModel",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        },
        "Schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "UseCaseType": {
              "type": "string",
              "description": "Type of the use case to be deployed. Either \"Text\" or \"Agent\".",
              "enum": [
                "Text",
                "Agent"
              ]
            },
            "UseCaseName": {
              "type": "string",
              "description": "Friendly name of the use case to be deployed. For display purposes."
            },
            "UseCaseDescription": {
              "type": "string",
              "description": "Description of the use case to be deployed. For display purposes"
            },
            "DefaultUserEmail": {
              "type": "string",
              "description": "Email address of the user who will be created with permissions to use the deployed use-case",
              "format": "email"
            },
            "DeployUI": {
              "type": "boolean",
              "description": "Deploy the CloudFront based UI for the use case",
              "default": true
            },
            "FeedbackParams": {
              "type": "object",
              "description": "Parameters for the feedback capability for the use case.",
              "properties": {
                "FeedbackEnabled": {
                  "type": "boolean",
                  "description": "Allow the feedback capability for the use case.",
                  "default": false
                }
              },
              "required": [
                "FeedbackEnabled"
              ],
              "additionalProperties": false
            },
            "ExistingRestApiId": {
              "type": "string",
              "description": "Rest API ID which will be used to invoke UseCaseDetails (and Feedback, if enabled)."
            },
            "VpcParams": {
              "type": "object",
              "description": "Parameters for the use case VPC. VPC can be either created for you, or provided by the user depending on the parameters provided.",
              "properties": {
                "VpcEnabled": {
                  "type": "boolean",
                  "description": "Should the use case stacks resources be deployed within a VPC",
                  "default": false
                },
                "CreateNewVpc": {
                  "type": "boolean",
                  "description": "If true, a new VPC will be created for the use case.",
                  "default": false
                },
                "ExistingVpcId": {
                  "type": "string",
                  "description": "If VpcEnabled is true and CreateNewVpc is false, the use case will be deployed within the specified VPC.",
                  "pattern": "^vpc-\\w{8}(\\w{9})?$"
                },
                "ExistingPrivateSubnetIds": {
                  "type": "array",
                  "description": "If VpcEnabled is true and CreateNewVpc is false, the use case will be deployed using the specified subnets.",
                  "items": {
                    "type": "string",
                    "pattern": "^subnet-\\w{8}(\\w{9})?$"
                  },
                  "maxItems": 16,
                  "uniqueItems": true
                },
                "ExistingSecurityGroupIds": {
                  "type": "array",
                  "description": "If VpcEnabled is true and CreateNewVpc is false, the use case will be deployed using the specified security groups.",
                  "items": {
                    "type": "string",
                    "pattern": "^sg-\\w{8}(\\w{9})?$"
                  },
                  "maxItems": 5,
                  "uniqueItems": true
                }
              },
              "oneOf": [
                {
                  "properties": {
                    "VpcEnabled": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "CreateNewVpc": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    }
                  },
                  "required": [
                    "ExistingVpcId",
                    "ExistingPrivateSubnetIds",
                    "ExistingSecurityGroupIds"
                  ]
                },
                {
                  "properties": {
                    "VpcEnabled": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "CreateNewVpc": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "ExistingVpcId": {
                      "not": {}
                    },
                    "ExistingPrivateSubnetIds": {
                      "not": {}
                    },
                    "ExistingSecurityGroupIds": {
                      "not": {}
                    }
                  }
                },
                {
                  "properties": {
                    "VpcEnabled": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "CreateNewVpc": {
                      "not": {}
                    },
                    "ExistingVpcId": {
                      "not": {}
                    },
                    "ExistingPrivateSubnetIds": {
                      "not": {}
                    },
                    "ExistingSecurityGroupIds": {
                      "not": {}
                    }
                  }
                }
              ],
              "required": [
                "VpcEnabled"
              ],
              "additionalProperties": false
            },
            "ConversationMemoryParams": {
              "type": "object",
              "description": "Parameters related to storing and using the chat history",
              "properties": {
                "ConversationMemoryType": {
                  "type": "string",
                  "default": "DynamoDB",
                  "enum": [
                    "DynamoDB"
                  ]
                },
                "HumanPrefix": {
                  "type": "string",
                  "description": "Prefix used in the history when storing messages sent by the user"
                },
                "AiPrefix": {
                  "type": "string",
                  "description": "Prefix used in the history when storing responses from the LLM"
                },
                "ChatHistoryLength": {
                  "type": "integer",
                  "description": "Number of messages to store in the history",
                  "minimum": 0
                }
              },
              "additionalProperties": false
            },
            "KnowledgeBaseParams": {
              "type": "object",
              "description": "Parameters related to the knowledge base. Based on KnowledgeBaseType, different nested parameters are required.",
              "properties": {
                "KnowledgeBaseType": {
                  "type": "string",
                  "description": "The type of knowledge base to use. Required.",
                  "default": "Kendra",
                  "enum": [
                    "Kendra",
                    "Bedrock"
                  ]
                },
                "NoDocsFoundResponse": {
                  "type": "string",
                  "description": "Response text message to use when the knowledge base does not return any documents",
                  "minLength": 1
                },
                "KendraKnowledgeBaseParams": {
                  "type": "object",
                  "description": "Parameters specific to Kendra",
                  "properties": {
                    "ExistingKendraIndexId": {
                      "type": "string",
                      "description": "Index ID of an existing Kendra index to be used for the use case. Required if KendraIndexName is not provided.",
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                    },
                    "KendraIndexName": {
                      "type": "string",
                      "description": "Name of the new Kendra index to be created, if provided. Required if ExistingKendraIndexId is not provided.",
                      "pattern": "^[0-9a-zA-Z-]{1,64}$"
                    },
                    "QueryCapacityUnits": {
                      "type": "integer",
                      "description": "Number of additional query capacity units to provision for the new Kendra index to be created. Can only be provided if if ExistingKendraIndexId is not provided.",
                      "default": 0,
                      "minimum": 0,
                      "maximum": 100
                    },
                    "StorageCapacityUnits": {
                      "type": "integer",
                      "description": "Number of additional storage capacity units to provision for the new Kendra index to be created. Can only be provided if if ExistingKendraIndexId is not provided.",
                      "default": 0,
                      "minimum": 0,
                      "maximum": 100
                    },
                    "KendraIndexEdition": {
                      "type": "string",
                      "description": "Edition of the Kendra index to be created. Can only be provided if if ExistingKendraIndexId is not provided.",
                      "enum": [
                        "DEVELOPER_EDITION",
                        "ENTERPRISE_EDITION"
                      ],
                      "default": "DEVELOPER_EDITION"
                    },
                    "AttributeFilter": {
                      "type": "object",
                      "description": "Filter to apply when querying the Kendra index. See: https://docs.aws.amazon.com/kendra/latest/APIReference/API_AttributeFilter.html"
                    },
                    "RoleBasedAccessControlEnabled": {
                      "type": "boolean",
                      "description": "Whether role-based access control is enabled on the Kendra index, used to restrict Kendra queries to documents accessible by user group and id.",
                      "default": false
                    }
                  },
                  "oneOf": [
                    {
                      "required": [
                        "ExistingKendraIndexId"
                      ],
                      "properties": {
                        "KendraIndexName": {
                          "not": {}
                        },
                        "QueryCapacityUnits": {
                          "not": {}
                        },
                        "StorageCapacityUnits": {
                          "not": {}
                        },
                        "KendraIndexEdition": {
                          "not": {}
                        }
                      }
                    },
                    {
                      "required": [
                        "KendraIndexName"
                      ],
                      "properties": {
                        "ExistingKendraIndexId": {
                          "not": {}
                        }
                      }
                    }
                  ],
                  "additionalProperties": false
                },
                "BedrockKnowledgeBaseParams": {
                  "type": "object",
                  "description": "Parameters specific to Bedrock Knowledge Bases",
                  "properties": {
                    "BedrockKnowledgeBaseId": {
                      "type": "string",
                      "description": "ID of the Bedrock knowledge base to use in a RAG use case. Required if KnowledgeBaseType is Bedrock.",
                      "pattern": "^[0-9a-zA-Z]{1,10}$"
                    },
                    "RetrievalFilter": {
                      "type": "object",
                      "description": "Filter to apply when querying the Bedrock knowledge base. See: https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrievalFilter.html"
                    },
                    "OverrideSearchType": {
                      "type": "string",
                      "description": "If you're using an Amazon OpenSearch Serverless vector store that contains a filterable text field, you can specify whether to query the knowledge base with a HYBRID search using both vector embeddings and raw text, or SEMANTIC search using only vector embeddings. By default (if this is not provided), Amazon Bedrock will choose for you. For other vector store types, passing this parameter will result in a validation error during retrieval. For more information, see https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html",
                      "enum": [
                        "HYBRID",
                        "SEMANTIC",
                        "NONE"
                      ],
                      "default": "NONE"
                    }
                  },
                  "required": [
                    "BedrockKnowledgeBaseId"
                  ],
                  "additionalProperties": false
                },
                "NumberOfDocs": {
                  "type": "integer",
                  "description": "The number of documents returned from the knowledge base which will be used as context to be sent to the LLM",
                  "default": 2,
                  "minimum": 1,
                  "maximum": 100
                },
                "ScoreThreshold": {
                  "type": "number",
                  "description": "The minimum score a document must have to be returned from the knowledge base",
                  "default": 0,
                  "minimum": 0,
                  "maximum": 1
                },
                "ReturnSourceDocs": {
                  "type": "boolean",
                  "description": "Whether to return information about the source of documents returned from the knowledge base",
                  "default": false
                }
              },
              "oneOf": [
                {
                  "properties": {
                    "KnowledgeBaseType": {
                      "enum": [
                        "Kendra"
                      ]
                    },
                    "BedrockKnowledgeBaseParams": {
                      "not": {}
                    }
                  },
                  "required": [
                    "KendraKnowledgeBaseParams"
                  ]
                },
                {
                  "properties": {
                    "KnowledgeBaseType": {
                      "enum": [
                        "Bedrock"
                      ]
                    },
                    "KendraKnowledgeBaseParams": {
                      "not": {}
                    }
                  },
                  "required": [
                    "BedrockKnowledgeBaseParams"
                  ]
                }
              ],
              "required": [
                "KnowledgeBaseType"
              ],
              "additionalProperties": false
            },
            "AuthenticationParams": {
              "type": "object",
              "description": "Parameters related to the Authentication.",
              "properties": {
                "AuthenticationProvider": {
                  "type": "string",
                  "description": "Supported authentication provider.",
                  "enum": [
                    "Cognito"
                  ]
                },
                "CognitoParams": {
                  "type": "object",
                  "description": "Cognito user pool related parameters.",
                  "properties": {
                    "ExistingUserPoolId": {
                      "type": "string",
                      "description": "Existing Cognito User Pool Id.",
                      "pattern": "^[\\w-]+_[0-9a-zA-Z]+$",
                      "minLength": 1,
                      "maxLength": 55
                    },
                    "ExistingUserPoolClientId": {
                      "type": "string",
                      "description": "Existing Cognito User Pool Client Id.",
                      "pattern": "^[\\w+]+$",
                      "minLength": 1,
                      "maxLength": 128
                    }
                  },
                  "required": [
                    "ExistingUserPoolId"
                  ]
                }
              },
              "anyOf": [
                {
                  "properties": {
                    "AuthenticationProvider": {
                      "enum": [
                        "Cognito"
                      ]
                    }
                  },
                  "required": [
                    "CognitoParams"
                  ]
                }
              ],
              "required": [
                "AuthenticationProvider"
              ]
            },
            "LlmParams": {
              "type": "object",
              "description": "Parameters related to the LLM performing inferences.",
              "properties": {
                "ModelProvider": {
                  "type": "string",
                  "description": "Name of the LLM provider which the use case will use",
                  "enum": [
                    "Bedrock",
                    "SageMaker"
                  ]
                },
                "BedrockLlmParams": {
                  "type": "object",
                  "description": "Parameters specific to use cases using Bedrock as an LLM provider. Can only be provided when \"ModelProvider\" is Bedrock",
                  "properties": {
                    "ModelId": {
                      "type": "string",
                      "description": "Depending on whether ModelArn is provided, this will either be used to select the on-demand model to invoke or be used to specify the base model that the selected provisioned/custom model is based on.",
                      "pattern": "^([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.:]?[a-z0-9-]{1,63}))|(([0-9a-zA-Z][_-]?)+)$"
                    },
                    "ModelArn": {
                      "type": "string",
                      "description": "ARN of the provisioned/custom model to use from Amazon Bedrock. See: https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_InvokeModel.html#API_runtime_InvokeModel_RequestSyntax",
                      "pattern": "^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:(([0-9]{12}:custom-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-:]{1,63}/[a-z0-9]{12})|(:foundation-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.:]?[a-z0-9-]{1,63})([.:]?[a-z0-9-]{1,63}))|([0-9]{12}:provisioned-model/[a-z0-9]{12})))$"
                    },
                    "InferenceProfileId": {
                      "type": "string",
                      "description": "The identifier of the Bedrock inference profile to use when invoking the model. When provided, a ModelId and ModelArn should not be provided. All inference requests will be mapped to the specified inference profile, which can be configured in the Bedrock console. This enables cross region model invocation. See: https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference-use.html",
                      "pattern": "^[a-zA-Z0-9-:.]+$"
                    },
                    "GuardrailIdentifier": {
                      "type": "string",
                      "description": "The unique identifier of the Bedrock guardrail that you want to be applied to all LLM invocations. If you don't provide a value, no guardrail is applied to the invocation. If provided, you must also provide a GuardrailVersion. See: https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_InvokeModel.html#API_runtime_InvokeModel_RequestSyntax",
                      "pattern": "^(([a-z0-9]+)|(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:guardrail/[a-z0-9]+))$"
                    },
                    "GuardrailVersion": {
                      "type": "string",
                      "description": "Version of the guardrail to be used. Must be provided if GuardrailIdentifier is provided. See: https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_InvokeModel.html#API_runtime_InvokeModel_RequestSyntax",
                      "pattern": "^(([1-9][0-9]{0,7})|(DRAFT))$"
                    },
                    "BedrockInferenceType": {
                      "type": "string",
                      "description": "The type of Bedrock inference to use. Required for Bedrock LLM params.",
                      "default": "QUICK_START",
                      "enum": [
                        "QUICK_START",
                        "OTHER_FOUNDATION",
                        "INFERENCE_PROFILE",
                        "PROVISIONED"
                      ]
                    }
                  },
                  "required": [
                    "BedrockInferenceType"
                  ],
                  "allOf": [
                    {
                      "oneOf": [
                        {
                          "properties": {
                            "BedrockInferenceType": {
                              "enum": [
                                "QUICK_START",
                                "OTHER_FOUNDATION"
                              ]
                            },
                            "InferenceProfileId": {
                              "not": {}
                            }
                          },
                          "required": [
                            "ModelId"
                          ]
                        },
                        {
                          "properties": {
                            "BedrockInferenceType": {
                              "enum": [
                                "INFERENCE_PROFILE"
                              ]
                            },
                            "ModelId": {
                              "not": {}
                            }
                          },
                          "required": [
                            "InferenceProfileId"
                          ]
                        },
                        {
                          "properties": {
                            "BedrockInferenceType": {
                              "enum": [
                                "PROVISIONED"
                              ]
                            }
                          },
                          "required": [
                            "ModelArn"
                          ]
                        }
                      ]
                    },
                    {
                      "oneOf": [
                        {
                          "required": [
                            "GuardrailIdentifier",
                            "GuardrailVersion"
                          ]
                        },
                        {
                          "properties": {
                            "GuardrailIdentifier": {
                              "not": {}
                            },
                            "GuardrailVersion": {
                              "not": {}
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "additionalProperties": false
                },
                "SageMakerLlmParams": {
                  "type": "object",
                  "description": "Parameters specific to use cases using a SageMaker model as an LLM provider. Can only be provided when \"ModelProvider\" is SageMaker",
                  "properties": {
                    "EndpointName": {
                      "type": "string",
                      "description": "Endpoint for the deployed model to use from SageMaker",
                      "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$"
                    },
                    "ModelInputPayloadSchema": {
                      "type": "object",
                      "description": "An object defining the schema to be used to populate model params for SageMaker endpoint models"
                    },
                    "ModelOutputJSONPath": {
                      "type": "string",
                      "description": "JSON path where the response should be retrieved from the model output payload. Applicable only to SageMaker endpoints.",
                      "pattern": "^\\$[\\w\\.\\,\\[\\]:\\'\\\"\\-\\(\\)\\*\\?\\@]*$"
                    }
                  },
                  "required": [
                    "EndpointName",
                    "ModelInputPayloadSchema",
                    "ModelOutputJSONPath"
                  ],
                  "additionalProperties": false
                },
                "ModelParams": {
                  "type": "object",
                  "description": "Additional model params to be passed to the model, whose keys are as defined in the LLM documentation",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "Value": {
                        "type": "string",
                        "description": "Value of the param"
                      },
                      "Type": {
                        "type": "string",
                        "enum": [
                          "string",
                          "integer",
                          "float",
                          "boolean",
                          "list",
                          "dictionary"
                        ],
                        "description": "Python type of the param, as a string. Will be cast to this type before being fed to LLM."
                      }
                    },
                    "required": [
                      "Value",
                      "Type"
                    ]
                  }
                },
                "PromptParams": {
                  "type": "object",
                  "description": "Parameters related to the prompt(s) used by the use case",
                  "properties": {
                    "PromptTemplate": {
                      "type": "string",
                      "description": "Default prompt template which will be fed to the LLM, barring any overrides by users"
                    },
                    "UserPromptEditingEnabled": {
                      "type": "boolean",
                      "description": "Whether to allow the user of the use case to edit their own prompt",
                      "default": true
                    },
                    "MaxPromptTemplateLength": {
                      "type": "integer",
                      "description": "Maximum length (in characters) of the system prompt template that a user can use in the use case",
                      "minimum": 0
                    },
                    "MaxInputTextLength": {
                      "type": "integer",
                      "description": "Maximum length (in characters) of the input text that can be sent to the LLM.",
                      "minimum": 1
                    },
                    "RephraseQuestion": {
                      "type": "boolean",
                      "description": "Whether to use the disambiguated query instead of the original user input in the final prompt. Only appluies when using RAG.",
                      "default": true
                    },
                    "DisambiguationPromptTemplate": {
                      "type": "string",
                      "description": "Prompt which will be internally used to disambiguate new queries in combination with the chat history. Only applies when using RAG."
                    },
                    "DisambiguationEnabled": {
                      "type": "boolean",
                      "description": "Whether to perform disambiguation for the use case. Only applies when using RAG.",
                      "default": true
                    }
                  },
                  "additionalProperties": false
                },
                "Temperature": {
                  "type": "number",
                  "description": "Temperature value which will be fed to the LLM. Scale should be chosen based on the supported range of the model provider.",
                  "default": 0,
                  "minimum": 0,
                  "maximum": 100
                },
                "Streaming": {
                  "type": "boolean",
                  "description": "Whether to stream the LLM responses back to the user or not. Note some providers do not support streaming."
                },
                "RAGEnabled": {
                  "type": "boolean",
                  "description": "If true, the use case will reference a knowledge base when responding to the user. Otherwise provides chat with the LLM directly.",
                  "default": true
                },
                "Verbose": {
                  "type": "boolean",
                  "description": "Whether to print out debug messages to the console",
                  "default": false
                }
              },
              "oneOf": [
                {
                  "properties": {
                    "ModelProvider": {
                      "enum": [
                        "Bedrock"
                      ]
                    }
                  },
                  "required": [
                    "BedrockLlmParams"
                  ]
                },
                {
                  "properties": {
                    "ModelProvider": {
                      "enum": [
                        "SageMaker"
                      ]
                    }
                  },
                  "required": [
                    "SageMakerLlmParams"
                  ]
                }
              ],
              "additionalProperties": false
            },
            "AgentParams": {
              "type": "object",
              "description": "Parameters for Bedrock agent invocation workflow.",
              "properties": {
                "AgentType": {
                  "type": "string",
                  "description": "The type of agent to use. Required.",
                  "enum": [
                    "Bedrock"
                  ]
                },
                "BedrockAgentParams": {
                  "type": "object",
                  "properties": {
                    "AgentId": {
                      "type": "string",
                      "description": "ID of the Bedrock agent to be invoked.",
                      "pattern": "^[0-9a-zA-Z]+$",
                      "maxLength": 10
                    },
                    "AgentAliasId": {
                      "type": "string",
                      "description": "Alias ID of the Bedrock agent to be invoked.",
                      "pattern": "^[0-9a-zA-Z]+$",
                      "maxLength": 10
                    },
                    "EnableTrace": {
                      "type": "boolean",
                      "description": "Whether to enable tracing for the agent invocation.",
                      "default": false
                    }
                  },
                  "required": [
                    "AgentId",
                    "AgentAliasId",
                    "EnableTrace"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "AgentType"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "UseCaseType",
            "UseCaseName"
          ],
          "oneOf": [
            {
              "properties": {
                "UseCaseType": {
                  "enum": [
                    "Text"
                  ]
                }
              },
              "required": [
                "LlmParams"
              ],
              "oneOf": [
                {
                  "properties": {
                    "LlmParams": {
                      "properties": {
                        "RAGEnabled": {
                          "enum": [
                            false
                          ]
                        }
                      }
                    },
                    "KnowledgeBaseParams": {
                      "not": {}
                    }
                  }
                },
                {
                  "properties": {
                    "LlmParams": {
                      "properties": {
                        "RAGEnabled": {
                          "enum": [
                            true
                          ]
                        }
                      }
                    }
                  },
                  "required": [
                    "KnowledgeBaseParams"
                  ]
                }
              ]
            },
            {
              "properties": {
                "UseCaseType": {
                  "enum": [
                    "Agent"
                  ]
                },
                "KnowledgeBaseParams": {
                  "not": {}
                },
                "LlmParams": {
                  "not": {}
                }
              },
              "required": [
                "AgentParams"
              ]
            }
          ],
          "additionalProperties": false
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeployUseCaseResponseModel053210C2": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "ContentType": "application/json",
        "Description": "Response model to describe response of deploying a use case",
        "Name": "DeployUseCaseResponseModel",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        },
        "Schema": {
          "type": "object",
          "properties": {
            "useCaseId": {
              "type": "string",
              "description": "ID of the use case that was created"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointUpdateUseCaseApiBodyModel556ECDCC": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "ContentType": "application/json",
        "Description": "Defines the required JSON structure of the PUT request to update a use case",
        "Name": "UpdateUseCaseApiBodyModel",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        },
        "Schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "properties": {
            "UseCaseType": {
              "type": "string",
              "description": "Type of the use case to be deployed. Either \"Text\" or \"Agent\".",
              "enum": [
                "Text",
                "Agent"
              ]
            },
            "UseCaseDescription": {
              "type": "string",
              "description": "Description of the use case to be deployed. For display purposes"
            },
            "DefaultUserEmail": {
              "type": "string",
              "description": "Email address of the user who will be created with permissions to use the deployed use-case",
              "format": "email"
            },
            "DeployUI": {
              "type": "boolean",
              "description": "Deploy the CloudFront based UI for the use case",
              "default": true
            },
            "FeedbackParams": {
              "type": "object",
              "description": "Parameters for the feedback capability for the use case.",
              "properties": {
                "FeedbackEnabled": {
                  "type": "boolean",
                  "description": "Allow the feedback capability for the use case.",
                  "default": false
                }
              },
              "required": [
                "FeedbackEnabled"
              ],
              "additionalProperties": false
            },
            "ExistingRestApiId": {
              "type": "string",
              "description": "Rest API ID which will be used to invoke UseCaseDetails (and Feedback, if enabled)."
            },
            "VpcParams": {
              "type": "object",
              "description": "Parameters for the use case VPC. Note on updates it is only possible to change private subnets and security groups. It is not possible to switch the VPC a use case is deployed in, or move an existing non-VPC use case into a VPC.",
              "properties": {
                "ExistingPrivateSubnetIds": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "^subnet-\\w{8}(\\w{9})?$"
                  },
                  "maxItems": 16,
                  "uniqueItems": true,
                  "description": "If VpcEnabled is true and CreateNewVpc is false, the use case will be deployed using the specified subnets."
                },
                "ExistingSecurityGroupIds": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "^sg-\\w{8}(\\w{9})?$"
                  },
                  "maxItems": 5,
                  "uniqueItems": true,
                  "description": "If VpcEnabled is true and CreateNewVpc is false, the use case will be deployed using the specified security groups."
                }
              },
              "additionalProperties": false
            },
            "ConversationMemoryParams": {
              "type": "object",
              "description": "Parameters related to storing and using the chat history",
              "properties": {
                "ConversationMemoryType": {
                  "type": "string",
                  "default": "DynamoDB",
                  "enum": [
                    "DynamoDB"
                  ]
                },
                "HumanPrefix": {
                  "type": "string",
                  "description": "Prefix used in the history when storing messages sent by the user"
                },
                "AiPrefix": {
                  "type": "string",
                  "description": "Prefix used in the history when storing responses from the LLM"
                },
                "ChatHistoryLength": {
                  "type": "integer",
                  "description": "Number of messages to store in the history",
                  "minimum": 0
                }
              },
              "additionalProperties": false
            },
            "KnowledgeBaseParams": {
              "type": "object",
              "description": "Parameters related to the knowledge base. Based on KnowledgeBaseType, different nested parameters are required.",
              "properties": {
                "KnowledgeBaseType": {
                  "type": "string",
                  "description": "The type of knowledge base to use. Required.",
                  "default": "Kendra",
                  "enum": [
                    "Kendra",
                    "Bedrock"
                  ]
                },
                "NoDocsFoundResponse": {
                  "type": "string",
                  "description": "Response text message to use when the knowledge base does not return any documents",
                  "minLength": 1
                },
                "KendraKnowledgeBaseParams": {
                  "type": "object",
                  "description": "Parameters specific to Kendra. Note on update we can only reference an existing Kendra index, creating a new one is not supported currently.",
                  "properties": {
                    "ExistingKendraIndexId": {
                      "type": "string",
                      "description": "Index ID of an existing Kendra index to be used for the use case. Required if KendraIndexName is not provided.",
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                    },
                    "AttributeFilter": {
                      "type": "object",
                      "description": "Filter to apply when querying the Kendra index. See: https://docs.aws.amazon.com/kendra/latest/APIReference/API_AttributeFilter.html"
                    },
                    "RoleBasedAccessControlEnabled": {
                      "type": "boolean",
                      "description": "Whether role-based access control is enabled on the Kendra index, used to restrict Kendra queries to documents accessible by user group and id.",
                      "default": false
                    }
                  },
                  "minProperties": 1,
                  "additionalProperties": false
                },
                "BedrockKnowledgeBaseParams": {
                  "type": "object",
                  "description": "Parameters specific to Bedrock Knowledge Bases",
                  "properties": {
                    "BedrockKnowledgeBaseId": {
                      "type": "string",
                      "description": "ID of the Bedrock knowledge base to use in a RAG use case. Required if KnowledgeBaseType is Bedrock.",
                      "pattern": "^[0-9a-zA-Z]{1,10}$"
                    },
                    "RetrievalFilter": {
                      "type": "object",
                      "description": "Filter to apply when querying the Bedrock knowledge base. See: https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrievalFilter.html"
                    },
                    "OverrideSearchType": {
                      "type": "string",
                      "description": "If you're using an Amazon OpenSearch Serverless vector store that contains a filterable text field, you can specify whether to query the knowledge base with a HYBRID search using both vector embeddings and raw text, or SEMANTIC search using only vector embeddings. By default (if this is not provided), Amazon Bedrock will choose for you. For other vector store types, passing this parameter will result in a validation error during retrieval. For more information, see https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html",
                      "enum": [
                        "HYBRID",
                        "SEMANTIC",
                        "NONE"
                      ],
                      "default": "NONE"
                    }
                  },
                  "additionalProperties": false
                },
                "NumberOfDocs": {
                  "type": "integer",
                  "description": "The number of documents returned from the knowledge base which will be used as context to be sent to the LLM",
                  "default": 2,
                  "minimum": 1,
                  "maximum": 100
                },
                "ScoreThreshold": {
                  "type": "number",
                  "description": "The minimum score a document must have to be returned from the knowledge base",
                  "default": 0,
                  "minimum": 0,
                  "maximum": 1
                },
                "ReturnSourceDocs": {
                  "type": "boolean",
                  "description": "Whether to return information about the source of documents returned from the knowledge base",
                  "default": false
                }
              },
              "oneOf": [
                {
                  "properties": {
                    "KnowledgeBaseType": {
                      "not": {}
                    }
                  }
                },
                {
                  "properties": {
                    "KnowledgeBaseType": {
                      "enum": [
                        "Kendra"
                      ]
                    },
                    "BedrockKnowledgeBaseParams": {
                      "not": {}
                    }
                  },
                  "required": [
                    "KendraKnowledgeBaseParams",
                    "KnowledgeBaseType"
                  ]
                },
                {
                  "properties": {
                    "KnowledgeBaseType": {
                      "enum": [
                        "Bedrock"
                      ]
                    },
                    "KendraKnowledgeBaseParams": {
                      "not": {}
                    }
                  },
                  "required": [
                    "BedrockKnowledgeBaseParams",
                    "KnowledgeBaseType"
                  ]
                }
              ],
              "additionalProperties": false
            },
            "AuthenticationParams": {
              "type": "object",
              "description": "Parameters related to the Authentication.",
              "properties": {
                "AuthenticationProvider": {
                  "type": "string",
                  "description": "Supported authentication provider.",
                  "enum": [
                    "Cognito"
                  ]
                },
                "CognitoParams": {
                  "type": "object",
                  "description": "Cognito user pool related parameters.",
                  "properties": {
                    "ExistingUserPoolId": {
                      "type": "string",
                      "description": "Existing Cognito User Pool Id.",
                      "pattern": "^[\\w-]+_[0-9a-zA-Z]+$",
                      "minLength": 1,
                      "maxLength": 55
                    },
                    "ExistingUserPoolClientId": {
                      "type": "string",
                      "description": "Existing Cognito User Pool Client Id.",
                      "pattern": "^[\\w+]+$",
                      "minLength": 1,
                      "maxLength": 128
                    }
                  },
                  "required": [
                    "ExistingUserPoolId"
                  ]
                }
              },
              "anyOf": [
                {
                  "properties": {
                    "AuthenticationProvider": {
                      "enum": [
                        "Cognito"
                      ]
                    }
                  },
                  "required": [
                    "CognitoParams"
                  ]
                }
              ],
              "required": [
                "AuthenticationProvider"
              ]
            },
            "LlmParams": {
              "type": "object",
              "properties": {
                "ModelProvider": {
                  "type": "string",
                  "description": "Name of the LLM provider which the use case will use",
                  "enum": [
                    "Bedrock",
                    "SageMaker"
                  ]
                },
                "BedrockLlmParams": {
                  "type": "object",
                  "description": "Parameters specific to use cases using Bedrock as an LLM provider. Can only be provided when \"ModelProvider\" is Bedrock",
                  "properties": {
                    "ModelId": {
                      "type": "string",
                      "description": "Depending on whether ModelArn is provided, this will either be used to select the on-demand model to invoke or be used to specify the base model that the selected provisioned/custom model is based on.",
                      "pattern": "^([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.:]?[a-z0-9-]{1,63}))|(([0-9a-zA-Z][_-]?)+)$"
                    },
                    "ModelArn": {
                      "type": "string",
                      "description": "ARN of the provisioned/custom model to use from Amazon Bedrock. See: https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_InvokeModel.html#API_runtime_InvokeModel_RequestSyntax",
                      "pattern": "^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:(([0-9]{12}:custom-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-:]{1,63}/[a-z0-9]{12})|(:foundation-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.:]?[a-z0-9-]{1,63})([.:]?[a-z0-9-]{1,63}))|([0-9]{12}:provisioned-model/[a-z0-9]{12})))$"
                    },
                    "InferenceProfileId": {
                      "type": "string",
                      "description": "The identifier of the Bedrock inference profile to use when invoking the model. When provided, a ModelId and ModelArn should not be provided. All inference requests will be mapped to the specified inference profile, which can be configured in the Bedrock console. This enables cross region model invocation. See: https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference-use.html",
                      "pattern": "^[a-zA-Z0-9-:.]+$"
                    },
                    "GuardrailIdentifier": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The unique identifier of the Bedrock guardrail that you want to be applied to all LLM invocations. If you don't provide a value, no guardrail is applied to the invocation. If provided, you must also provide a GuardrailVersion. To remove a guardrail set this value to 'null'. See: https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_InvokeModel.html#API_runtime_InvokeModel_RequestSyntax.",
                      "pattern": "^(([a-z0-9]+)|(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:guardrail/[a-z0-9]+))$"
                    },
                    "GuardrailVersion": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Version of the guardrail to be used. Must be provided if GuardrailIdentifier is provided. See: https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_InvokeModel.html#API_runtime_InvokeModel_RequestSyntax",
                      "pattern": "^(([1-9][0-9]{0,7})|(DRAFT))$"
                    },
                    "BedrockInferenceType": {
                      "type": "string",
                      "description": "The type of Bedrock inference to use. Required for Bedrock LLM params.",
                      "default": "QUICK_START",
                      "enum": [
                        "QUICK_START",
                        "OTHER_FOUNDATION",
                        "INFERENCE_PROFILE",
                        "PROVISIONED"
                      ]
                    }
                  },
                  "required": [
                    "BedrockInferenceType"
                  ],
                  "oneOf": [
                    {
                      "required": [
                        "ModelId"
                      ],
                      "properties": {
                        "BedrockInferenceType": {
                          "enum": [
                            "QUICK_START",
                            "OTHER_FOUNDATION"
                          ]
                        },
                        "InferenceProfileId": {
                          "not": {}
                        }
                      }
                    },
                    {
                      "required": [
                        "InferenceProfileId"
                      ],
                      "properties": {
                        "BedrockInferenceType": {
                          "enum": [
                            "INFERENCE_PROFILE"
                          ]
                        },
                        "ModelId": {
                          "not": {}
                        }
                      }
                    },
                    {
                      "properties": {
                        "BedrockInferenceType": {
                          "enum": [
                            "PROVISIONED"
                          ]
                        }
                      },
                      "required": [
                        "ModelArn"
                      ]
                    },
                    {
                      "properties": {
                        "ModelId": {
                          "not": {}
                        },
                        "InferenceProfileId": {
                          "not": {}
                        },
                        "ModelArn": {
                          "not": {}
                        }
                      }
                    }
                  ],
                  "additionalProperties": false
                },
                "SageMakerLlmParams": {
                  "type": "object",
                  "description": "Parameters specific to use cases using a SageMaker model as an LLM provider. Can only be provided when \"ModelProvider\" is SageMaker",
                  "properties": {
                    "EndpointName": {
                      "type": "string",
                      "description": "Endpoint for the deployed model to use from SageMaker",
                      "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$"
                    },
                    "ModelInputPayloadSchema": {
                      "type": "object",
                      "description": "An object defining the schema to be used to populate model params for SageMaker endpoint models"
                    },
                    "ModelOutputJSONPath": {
                      "type": "string",
                      "description": "JSON path where the response should be retrieved from the model output payload. Applicable only to SageMaker endpoints.",
                      "pattern": "^\\$[\\w\\.\\,\\[\\]:\\'\\\"\\-\\(\\)\\*\\?\\@]*$"
                    }
                  },
                  "additionalProperties": false
                },
                "ModelParams": {
                  "type": "object",
                  "description": "Additional model params to be passed to the model, whose keys are as defined in the LLM documentation",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "Value": {
                        "type": "string",
                        "description": "Value of the param"
                      },
                      "Type": {
                        "type": "string",
                        "enum": [
                          "string",
                          "integer",
                          "float",
                          "boolean",
                          "list",
                          "dictionary"
                        ],
                        "description": "Python type of the param, as a string. Will be cast to this type before being fed to LLM."
                      }
                    },
                    "required": [
                      "Value",
                      "Type"
                    ]
                  }
                },
                "PromptParams": {
                  "type": "object",
                  "description": "Parameters related to the prompt(s) used by the use case",
                  "properties": {
                    "PromptTemplate": {
                      "type": "string",
                      "description": "Default prompt template which will be fed to the LLM, barring any overrides by users"
                    },
                    "UserPromptEditingEnabled": {
                      "type": "boolean",
                      "description": "Whether to allow the user of the use case to edit their own prompt"
                    },
                    "MaxPromptTemplateLength": {
                      "type": "integer",
                      "description": "Maximum length (in characters) of the prompt template that a user can use in the use case"
                    },
                    "MaxInputTextLength": {
                      "type": "integer",
                      "description": "Maximum length (in characters) of the input text that can be sent to the LLM."
                    },
                    "RephraseQuestion": {
                      "type": "boolean",
                      "description": "Whether to use the disambiguated query instead of the original user input in the final prompt. Only appluies when using RAG.",
                      "default": true
                    },
                    "DisambiguationPromptTemplate": {
                      "type": "string",
                      "description": "Prompt which will be internally used to disambiguate new queries in combination with the chat history. Only applies when using RAG."
                    },
                    "DisambiguationEnabled": {
                      "type": "boolean",
                      "description": "Whether to disable disambiguation for the use case. Only applies when using RAG."
                    }
                  },
                  "additionalProperties": false
                },
                "Temperature": {
                  "type": "number",
                  "description": "Temperature value which will be fed to the LLM. Scale should be chosen based on the supported range of the model provider.",
                  "default": 0,
                  "minimum": 0,
                  "maximum": 100
                },
                "Streaming": {
                  "type": "boolean",
                  "description": "Whether to stream the LLM responses back to the user or not. Note some providers do not support streaming."
                },
                "RAGEnabled": {
                  "type": "boolean",
                  "description": "If true, the use case will reference a knowledge base when responding to the user. Otherwise provides chat with the LLM directly."
                },
                "Verbose": {
                  "type": "boolean",
                  "description": "Whether to print out debug messages to the console"
                }
              },
              "anyOf": [
                {
                  "properties": {
                    "ModelProvider": {
                      "enum": [
                        "Bedrock"
                      ]
                    }
                  },
                  "required": [
                    "BedrockLlmParams"
                  ]
                },
                {
                  "properties": {
                    "ModelProvider": {
                      "enum": [
                        "SageMaker"
                      ]
                    }
                  },
                  "required": [
                    "SageMakerLlmParams"
                  ]
                },
                {
                  "properties": {
                    "ModelProvider": {
                      "not": {}
                    }
                  }
                }
              ],
              "additionalProperties": false
            },
            "AgentParams": {
              "type": "object",
              "description": "Parameters for Bedrock agent invocation workflow.",
              "properties": {
                "AgentType": {
                  "type": "string",
                  "description": "The type of agent to use. Required.",
                  "enum": [
                    "Bedrock"
                  ]
                },
                "BedrockAgentParams": {
                  "type": "object",
                  "properties": {
                    "AgentId": {
                      "type": "string",
                      "description": "ID of the Bedrock agent to be invoked.",
                      "pattern": "^[0-9a-zA-Z]+$",
                      "maxLength": 10
                    },
                    "AgentAliasId": {
                      "type": "string",
                      "description": "Alias ID of the Bedrock agent to be invoked.",
                      "pattern": "^[0-9a-zA-Z]+$",
                      "maxLength": 10
                    },
                    "EnableTrace": {
                      "type": "boolean",
                      "description": "Whether to enable tracing for the agent invocation.",
                      "default": false
                    }
                  },
                  "required": [
                    "AgentId",
                    "AgentAliasId"
                  ],
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "anyOf": [
            {
              "required": [
                "UseCaseDescription"
              ]
            },
            {
              "required": [
                "DefaultUserEmail"
              ]
            },
            {
              "required": [
                "VpcParams"
              ]
            },
            {
              "required": [
                "ConversationMemoryParams"
              ]
            },
            {
              "required": [
                "KnowledgeBaseParams"
              ]
            },
            {
              "required": [
                "LlmParams"
              ]
            },
            {
              "required": [
                "AgentParams"
              ]
            },
            {
              "required": [
                "AuthenticationParams"
              ]
            }
          ],
          "required": [
            "UseCaseType"
          ],
          "additionalProperties": false
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointUpdateUseCaseResponseModel43C6C5F9": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "ContentType": "application/json",
        "Description": "Response model to describe response of updating a use case",
        "Name": "UpdateUseCaseResponseModel",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
        },
        "Schema": {
          "type": "object",
          "properties": {
            "useCaseId": {
              "type": "string",
              "description": "ID of the use case that was updated"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      }
    },
    "UseCaseManagementSetupRequestProcessorCognitoAdminGroupPolicyTableWriterB481B347": {
      "Type": "Custom::CognitoAdminGroupPolicyTableWriter",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "DeploymentPlatformSetupInfraSetupCustomResource5473231F",
            "Arn"
          ]
        },
        "Resource": "ADMIN_POLICY",
        "API_ARN": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              "/*/*/*"
            ]
          ]
        },
        "POLICY_TABLE_NAME": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformCognitoSetupCognitoGroupPolicyTableName0C5E8F79"
          ]
        }
      },
      "DependsOn": [
        "UseCaseManagementSetupRequestProcessorCognitoAdminGroupPolicyFA8C586D",
        "UseCaseManagementSetupRequestProcessorDeploymentRestAuthorizerAPIGatewayInvoke7E420FA2",
        "UseCaseManagementSetupRequestProcessorDeploymentRestAuthorizerDeploymentPlatformStackUseCaseManagementSetupRequestProcessorRestCustomRequestAuthorizer537B59D4Permissions3FBB7A58",
        "UseCaseManagementSetupRequestProcessorDeploymentRestAuthorizer2B81EC22"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "UseCaseManagementSetupRequestProcessorCognitoAdminGroupPolicyFA8C586D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:DeleteItem",
                "dynamodb:GetItem",
                "dynamodb:PutItem"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:dynamodb:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":table/",
                    {
                      "Fn::GetAtt": [
                        "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
                        "Outputs.DeploymentPlatformCognitoSetupCognitoGroupPolicyTableName0C5E8F79"
                      ]
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UseCaseManagementSetupRequestProcessorCognitoAdminGroupPolicyFA8C586D",
        "Roles": [
          {
            "Fn::Select": [
              1,
              {
                "Fn::Split": [
                  "/",
                  {
                    "Fn::Select": [
                      5,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::GetAtt": [
                              "DeploymentPlatformSetupCustomResourceLambdaRole3C444A9D",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDlq4B523B54": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDlqPolicy4A6E7CAA": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDlq4B523B54",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDlq4B523B54"
          }
        ]
      }
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDetailsRole5FD36A48": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "logs:PutLogEvents",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*:log-stream:*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:*ssignPrivateIpAddresses",
                    "ec2:CreateNetworkInterface"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":network-interface/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":security-group/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":subnet/*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Action": [
                    "ec2:De*NetworkInterface",
                    "ec2:DescribeNetworkInterfaces"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "VPCPolicy"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*"
              ]
            },
            {
              "reason": "Lambda function has the required permission to write CloudWatch Log streams. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*:log-stream:*"
              ]
            },
            {
              "reason": "Even though the resource is \"*\", the actions have been scoped down only to the ones required by the solution",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Action::ec2:*ssignPrivateIpAddresses",
                "Action::ec2:De*NetworkInterface"
              ]
            },
            {
              "reason": "Networking resources are not known and hence \"*\". Also there are additional conditions to scope it down",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:ec2:<AWS::Region>:<AWS::AccountId>:*",
                "Resource::arn:<AWS::Partition>:ec2:<AWS::Region>:<AWS::AccountId>:network-interface/*",
                "Resource::arn:<AWS::Partition>:ec2:<AWS::Region>:<AWS::AccountId>:subnet/*",
                "Resource::arn:<AWS::Partition>:ec2:<AWS::Region>:<AWS::AccountId>:security-group/*",
                "Resource::arn:<AWS::Partition>:ec2:<AWS::Region>:<AWS::AccountId>:instance*",
                "Resource::*"
              ]
            },
            {
              "reason": "Permission generated by the ApiGatewayToLambda construct to allow CloudWatch Logs to be used",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:*"
              ]
            }
          ]
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "The exact resource arn is unknown at this time. Hence wildcard. The arns are have been restricted to the account and region where possible, except for \"ec2:Describe\" calls which require the arn to be a wildcard"
            },
            {
              "id": "W12",
              "reason": "The exact resource arn is unknown at this time. Hence wildcard. The arns are have been restricted to the account and region where possible, except for \"ec2:Describe\" calls which require the arn to be a wildcard"
            },
            {
              "id": "W13",
              "reason": "The exact resource arn is unknown at this time. Hence wildcard. The arns are have been restricted to the account and region where possible, except for \"ec2:Describe\" calls which require the arn to be a wildcard"
            },
            {
              "id": "F10",
              "reason": "The inline policy avoids a rare race condition between the lambda, Role and the policy resource creation."
            }
          ]
        }
      },
      "Condition": "UseCaseManagementSetupUseCaseEndpointSetupCreateApiRoutesCondition0060F23A"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDetailsRoleDefaultPolicy872BE672": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDlq4B523B54",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "xray:PutTelemetryRecords",
                "xray:PutTraceSegments"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
                "dynamodb:GetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:Scan"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "DeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResourceF56260D3",
                          "Outputs.DeploymentPlatformStackDeploymentPlatformStorageLLMConfigTable9EB214F1Ref"
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDetailsRoleDefaultPolicy872BE672",
        "Roles": [
          {
            "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDetailsRole5FD36A48"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "The IAM role requires access to multiple resources with dynamic names. The permissions are scoped to specific use case resources.",
              "id": "AwsSolutions-IAM5"
            }
          ]
        }
      },
      "Condition": "UseCaseManagementSetupUseCaseEndpointSetupCreateApiRoutesCondition0060F23A"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDetailsLambdaB2D6F726": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "generative-ai-application-builder-on-aws/v3.0.3/asseta091f842ed12afc367c7a803e50bd84229be6c2a82cec663a0145e87eeaa6d6c.zip"
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDlq4B523B54",
              "Arn"
            ]
          }
        },
        "Description": "Lambda function for use case details",
        "Environment": {
          "Variables": {
            "LLM_CONFIG_TABLE": {
              "Fn::GetAtt": [
                "DeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResourceF56260D3",
                "Outputs.DeploymentPlatformStackDeploymentPlatformStorageLLMConfigTable9EB214F1Ref"
              ]
            },
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": [[\"AWSSOLUTION/SO0276/v3.0.3\"]] }",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "AwsNodeSdkLayer42C7A59C"
          },
          {
            "Ref": "NodeUserAgentLayer02526341"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDetailsRole5FD36A48",
            "Arn"
          ]
        },
        "Runtime": "nodejs22.x",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active"
        },
        "VpcConfig": {
          "Fn::If": [
            "UseCaseManagementSetupUseCaseEndpointSetupDeployVPCIfLambdaExistsFE27E265",
            {
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Fn::If": [
                      "DeployVPCCondition",
                      {
                        "Fn::GetAtt": [
                          "VPCDeploymentPlatformVPCNestedStackDeploymentPlatformVPCNestedStackResource186D2208",
                          "Outputs.PrivateSubnetIds"
                        ]
                      },
                      {
                        "Fn::Join": [
                          ",",
                          {
                            "Ref": "ExistingPrivateSubnetIds"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Fn::If": [
                      "DeployVPCCondition",
                      {
                        "Fn::GetAtt": [
                          "VPCDeploymentPlatformVPCNestedStackDeploymentPlatformVPCNestedStackResource186D2208",
                          "Outputs.SecurityGroupIds"
                        ]
                      },
                      {
                        "Fn::Join": [
                          ",",
                          {
                            "Ref": "ExistingSecurityGroupIds"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        }
      },
      "DependsOn": [
        "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDetailsRoleDefaultPolicy872BE672",
        "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDetailsRole5FD36A48"
      ],
      "Metadata": {
        "aws:asset:path": "asset.a091f842ed12afc367c7a803e50bd84229be6c2a82cec663a0145e87eeaa6d6c",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W89",
              "reason": "VPC deployment is not enforced. If the solution is deployed in a VPC, this lambda function will be deployed with VPC enabled configuration"
            },
            {
              "id": "W92",
              "reason": "The solution does not enforce reserved concurrency"
            }
          ]
        }
      },
      "Condition": "UseCaseManagementSetupUseCaseEndpointSetupCreateApiRoutesCondition0060F23A"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDetailsLogRetention79CC6C50": {
      "Type": "Custom::CW_LOG_RETENTION",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "DeploymentPlatformSetupInfraSetupCustomResource5473231F",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDetailsLambdaB2D6F726",
            "Arn"
          ]
        },
        "Resource": "CW_LOG_RETENTION"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Condition": "UseCaseManagementSetupUseCaseEndpointSetupCreateApiRoutesCondition0060F23A"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseRestAuthorizerRoleB2D1238D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "logs:PutLogEvents",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*:log-stream:*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:*ssignPrivateIpAddresses",
                    "ec2:CreateNetworkInterface"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":network-interface/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":security-group/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":subnet/*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Action": [
                    "ec2:De*NetworkInterface",
                    "ec2:DescribeNetworkInterfaces"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "VPCPolicy"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*"
              ]
            },
            {
              "reason": "Lambda function has the required permission to write CloudWatch Log streams. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/lambda/*:log-stream:*"
              ]
            },
            {
              "reason": "Even though the resource is \"*\", the actions have been scoped down only to the ones required by the solution",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Action::ec2:*ssignPrivateIpAddresses",
                "Action::ec2:De*NetworkInterface"
              ]
            },
            {
              "reason": "Networking resources are not known and hence \"*\". Also there are additional conditions to scope it down",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:ec2:<AWS::Region>:<AWS::AccountId>:*",
                "Resource::arn:<AWS::Partition>:ec2:<AWS::Region>:<AWS::AccountId>:network-interface/*",
                "Resource::arn:<AWS::Partition>:ec2:<AWS::Region>:<AWS::AccountId>:subnet/*",
                "Resource::arn:<AWS::Partition>:ec2:<AWS::Region>:<AWS::AccountId>:security-group/*",
                "Resource::arn:<AWS::Partition>:ec2:<AWS::Region>:<AWS::AccountId>:instance*",
                "Resource::*"
              ]
            },
            {
              "reason": "Lambda authorizer needs to describe any user pool to validate tokens from multiple user pools. Additional scoping down is found in the authorizer",
              "id": "AwsSolutions-IAM5"
            }
          ]
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "The exact resource arn is unknown at this time. Hence wildcard. The arns are have been restricted to the account and region where possible, except for \"ec2:Describe\" calls which require the arn to be a wildcard"
            },
            {
              "id": "W12",
              "reason": "The exact resource arn is unknown at this time. Hence wildcard. The arns are have been restricted to the account and region where possible, except for \"ec2:Describe\" calls which require the arn to be a wildcard"
            },
            {
              "id": "W13",
              "reason": "The exact resource arn is unknown at this time. Hence wildcard. The arns are have been restricted to the account and region where possible, except for \"ec2:Describe\" calls which require the arn to be a wildcard"
            },
            {
              "id": "F10",
              "reason": "The inline policy avoids a rare race condition between the lambda, Role and the policy resource creation."
            }
          ]
        }
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseRestAuthorizerRoleDefaultPolicy3FCFD071": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:cognito-idp:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":userpool/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseRestAuthorizerRoleDefaultPolicy3FCFD071",
        "Roles": [
          {
            "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseRestAuthorizerRoleB2D1238D"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Lambda authorizer needs to describe any user pool to validate tokens from multiple user pools. Additional scoping down is found in the authorizer",
              "id": "AwsSolutions-IAM5"
            }
          ]
        }
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointLambdaPolicyTablePolicyB5251E29": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetItem",
                "dynamodb:Query"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:dynamodb:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":table/"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointLambdaPolicyTablePolicyB5251E29",
        "Roles": [
          {
            "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseRestAuthorizerRoleB2D1238D"
          }
        ]
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointAuthorizerLambda67002B14": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "generative-ai-application-builder-on-aws/v3.0.3/assete9dcac7e3090cc0471b642871c990e320bd8859f7b1b36be6890d056ce26264c.zip"
        },
        "Description": "Authorizes REST API requests based on Cognito user pool groups",
        "Environment": {
          "Variables": {
            "USER_POOL_ID": "",
            "CLIENT_ID": "",
            "COGNITO_POLICY_TABLE_NAME": "",
            "AWS_SDK_USER_AGENT": "{ \"customUserAgent\": [[\"AWSSOLUTION/SO0276/v3.0.3\"]] }",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "rest-authorizer.handler",
        "Layers": [
          {
            "Ref": "AwsNodeSdkLayer42C7A59C"
          },
          {
            "Ref": "NodeUserAgentLayer02526341"
          }
        ],
        "Role": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseRestAuthorizerRoleB2D1238D",
            "Arn"
          ]
        },
        "Runtime": "nodejs22.x",
        "Timeout": 900,
        "VpcConfig": {
          "Fn::If": [
            "DeployVPCCondition",
            {
              "SubnetIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Fn::If": [
                      "DeployVPCCondition",
                      {
                        "Fn::GetAtt": [
                          "VPCDeploymentPlatformVPCNestedStackDeploymentPlatformVPCNestedStackResource186D2208",
                          "Outputs.PrivateSubnetIds"
                        ]
                      },
                      {
                        "Fn::Join": [
                          ",",
                          {
                            "Ref": "ExistingPrivateSubnetIds"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "SecurityGroupIds": {
                "Fn::Split": [
                  ",",
                  {
                    "Fn::If": [
                      "DeployVPCCondition",
                      {
                        "Fn::GetAtt": [
                          "VPCDeploymentPlatformVPCNestedStackDeploymentPlatformVPCNestedStackResource186D2208",
                          "Outputs.SecurityGroupIds"
                        ]
                      },
                      {
                        "Fn::Join": [
                          ",",
                          {
                            "Ref": "ExistingSecurityGroupIds"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        }
      },
      "DependsOn": [
        "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseRestAuthorizerRoleDefaultPolicy3FCFD071",
        "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseRestAuthorizerRoleB2D1238D"
      ],
      "Metadata": {
        "aws:asset:path": "asset.e9dcac7e3090cc0471b642871c990e320bd8859f7b1b36be6890d056ce26264c",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code",
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W89",
              "reason": "VPC deployment is not enforced. This REST authorizer is not configured within a VPC"
            },
            {
              "id": "W92",
              "reason": "The solution does not enforce reserved concurrency"
            }
          ]
        }
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointAuthorizerLambdaDeploymentPlatformStackUseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointAuthorizer40331405Permissions0CF8AA64": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointAuthorizerLambda67002B14",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
              },
              "/authorizers/",
              {
                "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointAuthorizer0B1A9B7A"
              }
            ]
          ]
        }
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointAuthorizerLambdaAPIGatewayInvokeCA3CC2A3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointAuthorizerLambda67002B14",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
              },
              "/*"
            ]
          ]
        }
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointAuthorizerLogRetention393EC774": {
      "Type": "Custom::CW_LOG_RETENTION",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "DeploymentPlatformSetupInfraSetupCustomResource5473231F",
            "Arn"
          ]
        },
        "FunctionName": {
          "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointAuthorizerLambda67002B14"
        },
        "Resource": "CW_LOG_RETENTION"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointAuthorizer0B1A9B7A": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "AuthorizerResultTtlInSeconds": 0,
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointAuthorizerLambda67002B14",
                          "Arn"
                        ]
                      }
                    ]
                  }
                ]
              },
              ":apigateway:",
              {
                "Fn::Select": [
                  3,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointAuthorizerLambda67002B14",
                          "Arn"
                        ]
                      }
                    ]
                  }
                ]
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointAuthorizerLambda67002B14",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        },
        "IdentitySource": "method.request.header.Authorization",
        "Name": "DeploymentPlatformStackUseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointAuthorizer40331405",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
        },
        "Type": "REQUEST"
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointApiAccessLogGroup58F53936": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 3653
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "API endpoint to access use case related resources",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-UseCasesAPI"
            ]
          ]
        }
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApiDeployment46B8C9B6114c3ff5f7acb3e06b654608a11dfc54": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "Description": "API endpoint to access use case related resources",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
        }
      },
      "DependsOn": [
        "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointBadRequestBodyResponse0F38C01A",
        "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointBadRequestDefaultResponse63BE5DCD",
        "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointBadRequestParametersResponse73682B10",
        "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApiGET54EC4772",
        "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointInternalServerErrorDefaultResponseFE8D9460",
        "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointAuthorizer0B1A9B7A",
        "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseRequestValidator2EA7C91E"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checks for it in AWS::ApiGateway::Deployment resource"
            }
          ]
        }
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApiDeploymentStageprodDFECD10F": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "AccessLogSetting": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointApiAccessLogGroup58F53936",
              "Arn"
            ]
          },
          "Format": "$context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] \"$context.httpMethod $context.resourcePath $context.protocol\" $context.status $context.responseLength $context.requestId"
        },
        "DeploymentId": {
          "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApiDeployment46B8C9B6114c3ff5f7acb3e06b654608a11dfc54"
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": false,
            "HttpMethod": "*",
            "LoggingLevel": "OFF",
            "MetricsEnabled": true,
            "ResourcePath": "/*",
            "ThrottlingBurstLimit": 5,
            "ThrottlingRateLimit": 5
          }
        ],
        "RestApiId": {
          "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
        },
        "StageName": "prod",
        "TracingEnabled": true
      },
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "API_GW_CACHE_ENABLED_AND_ENCRYPTED"
          ]
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Turning off execution logs as recommended best practice in the ApiGateway service documentation",
              "id": "AwsSolutions-APIG6"
            }
          ]
        }
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApiGET54EC4772": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointAuthorizer0B1A9B7A"
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Content-Type": "'application/json'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "StatusCode": "400"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Content-Type": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "400"
          }
        ],
        "OperationName": "UseCaseMockMethod",
        "RequestParameters": {
          "method.request.header.authorization": true
        },
        "RequestValidatorId": {
          "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseRequestValidator2EA7C91E"
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "A Custom authorizer must be used in order to authenticate using Cognito user groups",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApiUsagePlan0C45CF7E": {
      "Type": "AWS::ApiGateway::UsagePlan",
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
            },
            "Stage": {
              "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApiDeploymentStageprodDFECD10F"
            },
            "Throttle": {}
          }
        ]
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApiCloudWatchRoleBA34DD55": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:FilterLogEvents",
                    "logs:GetLogEvents",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy"
          }
        ]
      },
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "IAM_NO_INLINE_POLICY_CHECK"
          ]
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Permission generated by the ApiGatewayToLambda construct to allow CloudWatch Logs to be used",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:*"
              ]
            }
          ]
        }
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApiAccount80CB17CE": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApiCloudWatchRoleBA34DD55",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
      ],
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseRequestValidator2EA7C91E": {
      "Type": "AWS::ApiGateway::RequestValidator",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-api-request-validator"
            ]
          ]
        },
        "RestApiId": {
          "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
        },
        "ValidateRequestBody": true,
        "ValidateRequestParameters": true
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointWafUseCaseEndpointWafWebACL3FBA7C55": {
      "Type": "AWS::WAFv2::WebACL",
      "Properties": {
        "CustomResponseBodies": {
          "HeadersNotAllowed": {
            "Content": "One of your injected headers is not allowed",
            "ContentType": "TEXT_PLAIN"
          }
        },
        "DefaultAction": {
          "Allow": {}
        },
        "Rules": [
          {
            "Name": "AWS-AWSManagedRulesBotControlRuleSet",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 0,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesBotControlRuleSet",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesBotControlRuleSet",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": "AWS-AWSManagedRulesKnownBadInputsRuleSet",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 1,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesKnownBadInputsRuleSet",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesKnownBadInputsRuleSet",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": "AWS-AWSManagedRulesCommonRuleSet",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 2,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesCommonRuleSet",
                "RuleActionOverrides": [
                  {
                    "ActionToUse": {
                      "Count": {}
                    },
                    "Name": "SizeRestrictions_BODY"
                  }
                ],
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesCommonRuleSet",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": "AWS-AWSManagedRulesAnonymousIpList",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 3,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesAnonymousIpList",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesAnonymousIpList",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": "AWS-AWSManagedRulesAmazonIpReputationList",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 4,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesAmazonIpReputationList",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesAmazonIpReputationList",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": "AWS-AWSManagedRulesAdminProtectionRuleSet",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 5,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesAdminProtectionRuleSet",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesAdminProtectionRuleSet",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Name": "AWS-AWSManagedRulesSQLiRuleSet",
            "OverrideAction": {
              "None": {}
            },
            "Priority": 6,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesSQLiRuleSet",
                "VendorName": "AWS"
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesSQLiRuleSet",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Action": {
              "Block": {
                "CustomResponse": {
                  "CustomResponseBodyKey": "HeadersNotAllowed",
                  "ResponseCode": 403
                }
              }
            },
            "Name": "Custom-BlockRequestHeaders",
            "Priority": 7,
            "Statement": {
              "SizeConstraintStatement": {
                "ComparisonOperator": "GE",
                "FieldToMatch": {
                  "SingleHeader": {
                    "Name": "x-amzn-requestid"
                  }
                },
                "Size": 0,
                "TextTransformations": [
                  {
                    "Priority": 0,
                    "Type": "NONE"
                  }
                ]
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "Custom-BlockRequestHeaders",
              "SampledRequestsEnabled": true
            }
          },
          {
            "Action": {
              "Block": {}
            },
            "Name": "Custom-BlockOversizedBodyNotInDeploy",
            "Priority": 8,
            "Statement": {
              "AndStatement": {
                "Statements": [
                  {
                    "LabelMatchStatement": {
                      "Key": "awswaf:managed:aws:core-rule-set:SizeRestrictions_Body",
                      "Scope": "LABEL"
                    }
                  },
                  {
                    "NotStatement": {
                      "Statement": {
                        "OrStatement": {
                          "Statements": [
                            {
                              "ByteMatchStatement": {
                                "FieldToMatch": {
                                  "UriPath": {}
                                },
                                "PositionalConstraint": "ENDS_WITH",
                                "SearchString": "/deployments",
                                "TextTransformations": [
                                  {
                                    "Priority": 0,
                                    "Type": "NONE"
                                  }
                                ]
                              }
                            },
                            {
                              "RegexMatchStatement": {
                                "FieldToMatch": {
                                  "UriPath": {}
                                },
                                "RegexString": "/deployments/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                                "TextTransformations": [
                                  {
                                    "Priority": 0,
                                    "Type": "NONE"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              }
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "Custom-BlockOversizedBodyNotInDeploy",
              "SampledRequestsEnabled": true
            }
          }
        ],
        "Scope": "REGIONAL",
        "VisibilityConfig": {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "webACL",
          "SampledRequestsEnabled": true
        }
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointWafWebACLAssociation3ACF4622": {
      "Type": "AWS::WAFv2::WebACLAssociation",
      "Properties": {
        "ResourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region"
              },
              "::/restapis/",
              {
                "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
              },
              "/stages/",
              {
                "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApiDeploymentStageprodDFECD10F"
              }
            ]
          ]
        },
        "WebACLArn": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointWafUseCaseEndpointWafWebACL3FBA7C55",
            "Arn"
          ]
        }
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointBadRequestDefaultResponse63BE5DCD": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Headers": "'*'"
        },
        "ResponseType": "DEFAULT_4XX",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
        },
        "StatusCode": "400"
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointInternalServerErrorDefaultResponseFE8D9460": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Headers": "'*'"
        },
        "ResponseType": "DEFAULT_5XX",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
        },
        "StatusCode": "400"
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointBadRequestBodyResponse0F38C01A": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Headers": "'*'"
        },
        "ResponseTemplates": {
          "application/json": "{\"error\":{\"message\":\"$context.error.messageString\",\"errors\":\"$context.error.validationErrorString\"}}"
        },
        "ResponseType": "BAD_REQUEST_BODY",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
        },
        "StatusCode": "400"
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointBadRequestParametersResponse73682B10": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
          "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Headers": "'*'"
        },
        "ResponseTemplates": {
          "application/json": "{\"error\":{\"message\":\"$context.error.messageString\",\"errors\":\"$context.error.validationErrorString\"}}"
        },
        "ResponseType": "BAD_REQUEST_PARAMETERS",
        "RestApiId": {
          "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
        },
        "StatusCode": "400"
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseApidetails554F399A": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::If": [
            "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85",
            {
              "Fn::GetAtt": [
                "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7",
                "RootResourceId"
              ]
            },
            {
              "Fn::GetAtt": [
                "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F",
                "RootResourceId"
              ]
            }
          ]
        },
        "PathPart": "details",
        "RestApiId": {
          "Fn::If": [
            "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85",
            {
              "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
            },
            {
              "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
            }
          ]
        }
      },
      "Condition": "UseCaseManagementSetupUseCaseEndpointSetupCreateApiRoutesCondition0060F23A"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseApidetailsuseCaseConfigKeyEF5B18C2": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseApidetails554F399A"
        },
        "PathPart": "{useCaseConfigKey}",
        "RestApiId": {
          "Fn::If": [
            "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85",
            {
              "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
            },
            {
              "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
            }
          ]
        }
      },
      "Condition": "UseCaseManagementSetupUseCaseEndpointSetupCreateApiRoutesCondition0060F23A"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseApidetailsuseCaseConfigKeyOPTIONS0A3DA395": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type, Access-Control-Allow-Headers, X-Requested-With, Authorization'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseApidetailsuseCaseConfigKeyEF5B18C2"
        },
        "RestApiId": {
          "Fn::If": [
            "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85",
            {
              "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
            },
            {
              "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
            }
          ]
        }
      },
      "Condition": "UseCaseManagementSetupUseCaseEndpointSetupCreateApiRoutesCondition0060F23A"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseApidetailsuseCaseConfigKeyGETApiPermissionDeploymentPlatformStackUseCaseManagementSetupUseCaseEndpointSetupUseCaseApi3645B980GETdetailsuseCaseConfigKey414322C3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDetailsLambdaB2D6F726",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Fn::If": [
                  "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85",
                  {
                    "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
                  },
                  {
                    "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
                  }
                ]
              },
              "/*/GET/details/*"
            ]
          ]
        }
      },
      "Condition": "UseCaseManagementSetupUseCaseEndpointSetupCreateApiRoutesCondition0060F23A"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseApidetailsuseCaseConfigKeyGETApiPermissionTestDeploymentPlatformStackUseCaseManagementSetupUseCaseEndpointSetupUseCaseApi3645B980GETdetailsuseCaseConfigKeyCF030818": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDetailsLambdaB2D6F726",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Fn::If": [
                  "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85",
                  {
                    "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
                  },
                  {
                    "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
                  }
                ]
              },
              "/test-invoke-stage/GET/details/*"
            ]
          ]
        }
      },
      "Condition": "UseCaseManagementSetupUseCaseEndpointSetupCreateApiRoutesCondition0060F23A"
    },
    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseApidetailsuseCaseConfigKeyGET9A40C024": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Fn::If": [
            "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85",
            {
              "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseEndpointAuthorizer0B1A9B7A"
            },
            {
              "Ref": "UseCaseManagementSetupRequestProcessorRestCustomRequestAuthorizerCDD89059"
            }
          ]
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDetailsLambdaB2D6F726",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "OperationName": "UseCaseDetails",
        "RequestParameters": {
          "method.request.header.authorization": true
        },
        "RequestValidatorId": {
          "Fn::If": [
            "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85",
            {
              "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseRequestValidator2EA7C91E"
            },
            {
              "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointRequestValidator38E09551"
            }
          ]
        },
        "ResourceId": {
          "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseApidetailsuseCaseConfigKeyEF5B18C2"
        },
        "RestApiId": {
          "Fn::If": [
            "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85",
            {
              "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointDeploymentRestEndPointLambdaRestApi9C23F7C7"
            },
            {
              "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
            }
          ]
        }
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "A Custom authorizer must be used in order to authenticate using Cognito user groups",
              "id": "AwsSolutions-COG4"
            }
          ]
        }
      },
      "Condition": "UseCaseManagementSetupUseCaseEndpointSetupCreateApiRoutesCondition0060F23A"
    },
    "UseCaseManagementSetupFeedbackSetupStackNestedStackFeedbackSetupStackNestedStackResourceCA537136": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "ExistingPrivateSubnetIds": {
            "Fn::If": [
              "DeployVPCCondition",
              {
                "Fn::GetAtt": [
                  "VPCDeploymentPlatformVPCNestedStackDeploymentPlatformVPCNestedStackResource186D2208",
                  "Outputs.PrivateSubnetIds"
                ]
              },
              {
                "Fn::Join": [
                  ",",
                  {
                    "Ref": "ExistingPrivateSubnetIds"
                  }
                ]
              }
            ]
          },
          "ExistingSecurityGroupIds": {
            "Fn::If": [
              "DeployVPCCondition",
              {
                "Fn::GetAtt": [
                  "VPCDeploymentPlatformVPCNestedStackDeploymentPlatformVPCNestedStackResource186D2208",
                  "Outputs.SecurityGroupIds"
                ]
              },
              {
                "Fn::Join": [
                  ",",
                  {
                    "Ref": "ExistingSecurityGroupIds"
                  }
                ]
              }
            ]
          },
          "CustomResourceLambdaArn": {
            "Fn::GetAtt": [
              "DeploymentPlatformSetupInfraSetupCustomResource5473231F",
              "Arn"
            ]
          },
          "CustomResourceRoleArn": {
            "Fn::GetAtt": [
              "DeploymentPlatformSetupCustomResourceLambdaRole3C444A9D",
              "Arn"
            ]
          },
          "AccessLoggingBucketArn": {
            "Fn::GetAtt": [
              "DeploymentPlatformSetupAccessLog67D5D503",
              "Arn"
            ]
          },
          "FeedbackEnabled": "Yes",
          "ExistingRestApiId": {
            "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
          },
          "ExistingApiRootResourceId": {
            "Fn::GetAtt": [
              "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F",
              "RootResourceId"
            ]
          },
          "StackDeploymentSource": "DeploymentPlatform",
          "referencetoDeploymentPlatformStackUseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource1C4303B0OutputsDeploymentPlatformStackUseCaseManagementSetupUseCaseManagementUseCaseManagementDLQ5E4F3FEAArn": {
            "Fn::GetAtt": [
              "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
              "Outputs.DeploymentPlatformStackUseCaseManagementSetupUseCaseManagementUseCaseManagementDLQ5E4F3FEAArn"
            ]
          },
          "referencetoDeploymentPlatformStackDeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResource0080A447OutputsDeploymentPlatformStackDeploymentPlatformStorageLLMConfigTable9EB214F1Arn": {
            "Fn::GetAtt": [
              "DeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResourceF56260D3",
              "Outputs.DeploymentPlatformStackDeploymentPlatformStorageLLMConfigTable9EB214F1Arn"
            ]
          },
          "referencetoDeploymentPlatformStackDeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResource0080A447OutputsDeploymentPlatformStackDeploymentPlatformStorageUseCasesTable8AE1DCF5Arn": {
            "Fn::GetAtt": [
              "DeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResourceF56260D3",
              "Outputs.DeploymentPlatformStackDeploymentPlatformStorageUseCasesTable8AE1DCF5Arn"
            ]
          },
          "referencetoDeploymentPlatformStackDeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResource0080A447OutputsDeploymentPlatformStackDeploymentPlatformStorageLLMConfigTable9EB214F1Ref": {
            "Fn::GetAtt": [
              "DeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResourceF56260D3",
              "Outputs.DeploymentPlatformStackDeploymentPlatformStorageLLMConfigTable9EB214F1Ref"
            ]
          },
          "referencetoDeploymentPlatformStackDeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResource0080A447OutputsDeploymentPlatformStackDeploymentPlatformStorageUseCasesTable8AE1DCF5Ref": {
            "Fn::GetAtt": [
              "DeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResourceF56260D3",
              "Outputs.DeploymentPlatformStackDeploymentPlatformStorageUseCasesTable8AE1DCF5Ref"
            ]
          },
          "referencetoDeploymentPlatformStackAwsNodeSdkLayer390CBFFFRef": {
            "Ref": "AwsNodeSdkLayer42C7A59C"
          },
          "referencetoDeploymentPlatformStackNodeUserAgentLayer24384C79Ref": {
            "Ref": "NodeUserAgentLayer02526341"
          },
          "referencetoDeploymentPlatformStackUseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApi854B9E90Ref": {
            "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
          },
          "referencetoDeploymentPlatformStackRegistrySetup483F1675Id": {
            "Fn::GetAtt": [
              "RegistrySetupCC2515F0",
              "Id"
            ]
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://solutions-reference.s3.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              "generative-ai-application-builder-on-aws/v3.0.3/DeploymentPlatformStackUseCaseManagementSetupFeedbackSetupStack5DB20D5D.nested.template"
            ]
          ]
        }
      },
      "DependsOn": [
        "RegistrySetupCC2515F0"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:asset:path": "DeploymentPlatformStackUseCaseManagementSetupFeedbackSetupStack5DB20D5D.nested.template.json",
        "aws:asset:property": "TemplateURL"
      }
    },
    "WebConfig": {
      "Type": "Custom::WriteWebConfig",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "DeploymentPlatformSetupInfraSetupCustomResource5473231F",
            "Arn"
          ]
        },
        "Resource": "WEBCONFIG",
        "SSMKey": {
          "Fn::Join": [
            "",
            [
              "/gaab-webconfig/",
              {
                "Ref": "AWS::StackName"
              }
            ]
          ]
        },
        "UserPoolId": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformCognitoSetupUserPoolId0A73EB1C"
          ]
        },
        "UserPoolClientId": {
          "Fn::GetAtt": [
            "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
            "Outputs.DeploymentPlatformCognitoSetupUserPoolClientIdFE2BD0AE"
          ]
        },
        "CognitoRedirectUrl": {
          "Fn::If": [
            "DeployWebAppUIInfrastructureCondition",
            {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Fn::GetAtt": [
                      "WebAppNestedStackWebAppNestedStackResource4E994CA7",
                      "Outputs.DeploymentPlatformStackWebAppWebsiteUICloudFrontDistribution38CBCDC5DomainName"
                    ]
                  }
                ]
              ]
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "IsInternalUser": {
          "Fn::If": [
            "IsInternalUserCondition",
            true,
            false
          ]
        },
        "RestApiEndpoint": {
          "Fn::Join": [
            "",
            [
              "https://",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
              },
              ".execute-api.",
              {
                "Ref": "AWS::Region"
              },
              ".",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              {
                "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiDeploymentStageprodE2564A5F"
              },
              "/"
            ]
          ]
        }
      },
      "DependsOn": [
        "DeploymentPlatformSetupGetCognitoUserPoolInfo2A3390CD",
        "DeploymentPlatformSetupWriteToSSMBE1096BE",
        "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "CopyUICustomResourceNestedStackCopyUICustomResourceNestedStackResource298D3A15": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "CustomResourceRoleArn": {
            "Fn::GetAtt": [
              "DeploymentPlatformSetupCustomResourceLambdaRole3C444A9D",
              "Arn"
            ]
          },
          "CustomResourceLambdaArn": {
            "Fn::GetAtt": [
              "DeploymentPlatformSetupInfraSetupCustomResource5473231F",
              "Arn"
            ]
          },
          "WebConfigKey": {
            "Fn::Join": [
              "",
              [
                "/gaab-webconfig/",
                {
                  "Ref": "AWS::StackName"
                }
              ]
            ]
          },
          "WebS3BucketArn": {
            "Fn::GetAtt": [
              "WebAppNestedStackWebAppNestedStackResource4E994CA7",
              "Outputs.DeploymentPlatformStackWebAppWebsiteBucketF87806D4Arn"
            ]
          },
          "AccessLoggingBucketArn": {
            "Fn::GetAtt": [
              "DeploymentPlatformSetupAccessLog67D5D503",
              "Arn"
            ]
          },
          "referencetoDeploymentPlatformStackRegistrySetup483F1675Id": {
            "Fn::GetAtt": [
              "RegistrySetupCC2515F0",
              "Id"
            ]
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://solutions-reference.s3.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              "generative-ai-application-builder-on-aws/v3.0.3/DeploymentPlatformStackCopyUICustomResource964AC335.nested.template"
            ]
          ]
        }
      },
      "DependsOn": [
        "DeploymentPlatformSetupAccessLogPolicy2FB262B2",
        "RegistrySetupCC2515F0",
        "WebConfig"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:asset:path": "DeploymentPlatformStackCopyUICustomResource964AC335.nested.template.json",
        "aws:asset:property": "TemplateURL"
      },
      "Condition": "DeployWebAppUIInfrastructureCondition"
    },
    "RegistrySetupCC2515F0": {
      "Type": "AWS::ServiceCatalogAppRegistry::Application",
      "Properties": {
        "Description": "Service Catalog application to track and manage all your resources for the solution generative-ai-application-builder-on-aws",
        "Name": {
          "Fn::Join": [
            "",
            [
              "App-GAAB-Dashboard-",
              {
                "Ref": "AWS::StackName"
              }
            ]
          ]
        },
        "Tags": {
          "Solutions:ApplicationType": "AWS-Solutions",
          "Solutions:SolutionID": "SO0276",
          "Solutions:SolutionName": "generative-ai-application-builder-on-aws",
          "Solutions:SolutionVersion": "v3.0.3"
        }
      }
    },
    "AppRegistryAssociation": {
      "Type": "AWS::ServiceCatalogAppRegistry::ResourceAssociation",
      "Properties": {
        "Application": {
          "Fn::GetAtt": [
            "RegistrySetupCC2515F0",
            "Id"
          ]
        },
        "Resource": {
          "Ref": "AWS::StackId"
        },
        "ResourceType": "CFN_STACK"
      }
    },
    "AppAttributesC4C8180E": {
      "Type": "AWS::ServiceCatalogAppRegistry::AttributeGroup",
      "Properties": {
        "Attributes": {
          "applicationType": "AWS-Solutions",
          "version": "v3.0.3",
          "solutionID": "SO0276",
          "solutionName": "generative-ai-application-builder-on-aws"
        },
        "Description": "Attributes for Solutions Metadata",
        "Name": {
          "Fn::Join": [
            "",
            [
              "AttrGrp-",
              {
                "Ref": "AWS::StackName"
              }
            ]
          ]
        }
      }
    },
    "AppAttributesApplicationAttributeGroupAssociation5d45ed99601285052111": {
      "Type": "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation",
      "Properties": {
        "Application": {
          "Fn::GetAtt": [
            "RegistrySetupCC2515F0",
            "Id"
          ]
        },
        "AttributeGroup": {
          "Fn::GetAtt": [
            "AppAttributesC4C8180E",
            "Id"
          ]
        }
      }
    },
    "CustomMetricsPolicyFE11102D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudwatch:PutMetricData",
              "Condition": {
                "StringEquals": {
                  "cloudwatch:namespace": [
                    "AWS/ApiGateway",
                    "AWS/Kendra",
                    "AWS/Cognito",
                    "Langchain/LLM",
                    "AWS/Bedrock"
                  ]
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomMetricsPolicyFE11102D",
        "Roles": [
          {
            "Ref": "DeploymentPlatformSetupCustomResourceLambdaRole3C444A9D"
          },
          {
            "Ref": "UseCaseManagementSetupRequestProcessorRestAuthorizerRole9B42FEFC"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "This policy allows put metric data to CloudWatch. The policy is restricted using policy conditions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::*"
              ]
            }
          ]
        }
      }
    },
    "PythonUserAgentLayer6958F3C0": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "CompatibleRuntimes": [
          "python3.11",
          "python3.13"
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "generative-ai-application-builder-on-aws/v3.0.3/asset432a6a8d8ed46e54fbecfeac69f3d816b7e9e98cb0e99aa793bb36920dd2548c.zip"
        },
        "Description": "This layer configures AWS Python SDK initialization to send user-agent information"
      },
      "Metadata": {
        "aws:asset:path": "asset.432a6a8d8ed46e54fbecfeac69f3d816b7e9e98cb0e99aa793bb36920dd2548c",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Content"
      }
    },
    "Boto3Layer463A0AEA": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "CompatibleRuntimes": [
          "python3.11",
          "python3.13"
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "generative-ai-application-builder-on-aws/v3.0.3/assete7e07dcf64f6ad6319b475a3bb497b7e4b4bf303080bae7b1e11bc3bb338b978.zip"
        },
        "Description": "Boto3 layer to be bundled with python lambda functions"
      },
      "Metadata": {
        "aws:asset:path": "asset.e7e07dcf64f6ad6319b475a3bb497b7e4b4bf303080bae7b1e11bc3bb338b978",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Content"
      }
    },
    "CustomMetricsPolicyAnonymousDataAWSConditionA2CDA901": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudwatch:PutMetricData",
              "Condition": {
                "StringEquals": {
                  "cloudwatch:namespace": [
                    "AWS/ApiGateway",
                    "AWS/Kendra",
                    "AWS/Cognito",
                    "Langchain/LLM",
                    "AWS/Bedrock"
                  ]
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomMetricsPolicyAnonymousDataAWSConditionA2CDA901",
        "Roles": [
          {
            "Ref": "DeploymentPlatformSetupScheduledMetricsLambdaRole89420F9F"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "This policy allows put metric data to CloudWatch. The policy is restricted using policy conditions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::*"
              ]
            }
          ]
        }
      },
      "Condition": "AnonymousDataAWSCondition"
    },
    "NodeUserAgentLayer02526341": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "CompatibleRuntimes": [
          "nodejs18.x",
          "nodejs22.x"
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "generative-ai-application-builder-on-aws/v3.0.3/asset818c92551f299e997cedae1a8e388b8af4829f54b128513d52f437230231e3f3.zip"
        },
        "Description": "This layer configures AWS Node SDK initialization to send user-agent information"
      },
      "Metadata": {
        "aws:asset:path": "asset.818c92551f299e997cedae1a8e388b8af4829f54b128513d52f437230231e3f3",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Content"
      }
    },
    "AwsNodeSdkLayer42C7A59C": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "CompatibleRuntimes": [
          "nodejs18.x",
          "nodejs22.x"
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "generative-ai-application-builder-on-aws/v3.0.3/asset1aacfe66956ca004c16076a1165d3b7a6ca8829858b73d3eb3e093f28d5e6085.zip"
        },
        "Description": "AWS Javascript SDK v3 to be bundled with lambda functions as a layer"
      },
      "Metadata": {
        "aws:asset:path": "asset.1aacfe66956ca004c16076a1165d3b7a6ca8829858b73d3eb3e093f28d5e6085",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Content"
      }
    },
    "CustomMetricsPolicyCreateApiRoutesConditionF3852927": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudwatch:PutMetricData",
              "Condition": {
                "StringEquals": {
                  "cloudwatch:namespace": [
                    "AWS/ApiGateway",
                    "AWS/Kendra",
                    "AWS/Cognito",
                    "Langchain/LLM",
                    "AWS/Bedrock"
                  ]
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomMetricsPolicyCreateApiRoutesConditionF3852927",
        "Roles": [
          {
            "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseDetailsRole5FD36A48"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "This policy allows put metric data to CloudWatch. The policy is restricted using policy conditions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::*"
              ]
            }
          ]
        }
      },
      "Condition": "UseCaseManagementSetupUseCaseEndpointSetupCreateApiRoutesCondition0060F23A"
    },
    "CustomMetricsPolicyCreateApiResourcesCondition3E7A1DEA": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudwatch:PutMetricData",
              "Condition": {
                "StringEquals": {
                  "cloudwatch:namespace": [
                    "AWS/ApiGateway",
                    "AWS/Kendra",
                    "AWS/Cognito",
                    "Langchain/LLM",
                    "AWS/Bedrock"
                  ]
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomMetricsPolicyCreateApiResourcesCondition3E7A1DEA",
        "Roles": [
          {
            "Ref": "UseCaseManagementSetupUseCaseEndpointSetupUseCaseRestEndpointUseCaseRestAuthorizerRoleB2D1238D"
          }
        ]
      },
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "This policy allows put metric data to CloudWatch. The policy is restricted using policy conditions.",
              "id": "AwsSolutions-IAM5",
              "applies_to": [
                "Resource::*"
              ]
            }
          ]
        }
      },
      "Condition": "UseCaseManagementSetupCreateApiResourcesConditionF9F71A85"
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/3VTwW7bMAz9lt5ltU2HdbvNTbBeUixzs/VY0DLrqJElV5QSZIL/fbCkJG6xXaL3nhmRfKRmPFx/nfGrC9hTIZptoWTNw6MDsWXzF70CCx06tCOZG91IJ40eSeUVMtjTc6AbHu682KIb9YzSsTJKisNZzjyROyAcmISOh3NcRpVRGLMYhQNT0NUN8PDda3HMP8UrtJ0kGtlRHi9nSzig/Y2WctyUD4xunoEIHfFyPBjuUDviIXaWOxyYUMY3e3Biw8MCaFMbsM34+UQGBr1sweEeDjxU+OaRXOndxlj5Jzk3YcvYSzWG9DKmyXCBvTKHDnW0ccIeHbSxoAQqJOOtwNjhkeSLEn5AtzGxxox+EbS4UhBNeEdKIYzXjuWqf4OSDThj030ftPvUY4XUG00x50fpwTSoYuYIcm9p0sq0xMPStPfW+D7OI+OB7eFlN+Nh/qKfsC7nS3ZCJZERElwa2Rvx8NOjj8kTiL/nBZrQgTUHDZ1par6GWiXHCO1OChTgQJkW+t5iK8nZQ8xe9r2SAk5Lni2dFBFdc87K2js8dfJemdY8sLhd4+ykbtnckzPdP8c2FU8P8Id3vY8b8QB9L3U7sNtP/Ori2/heySg/JqFCGE3OeuHocvwQ0ospTv2nrVubRRQWd5OVLfLrKnuZp7k2KXycyh5rEKqYbPjTUVyb818Gdv35ls8KUP0GjuWJZhur+a/lOTxMXX/v5DAwbRrkr3S5m13x6y98dvFKUhbWayc75FU6/wJbOYJMxwQAAA=="
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "VpcId": {
      "Description": "The ID of the VPC",
      "Value": {
        "Fn::If": [
          "DeployVPCCondition",
          {
            "Fn::GetAtt": [
              "VPCDeploymentPlatformVPCNestedStackDeploymentPlatformVPCNestedStackResource186D2208",
              "Outputs.VpcId"
            ]
          },
          {
            "Ref": "ExistingVpcId"
          }
        ]
      },
      "Condition": "VPCEnabledCondition"
    },
    "PrivateSubnetIds": {
      "Description": "Comma separated list of private subnet ids",
      "Value": {
        "Fn::If": [
          "DeployVPCCondition",
          {
            "Fn::GetAtt": [
              "VPCDeploymentPlatformVPCNestedStackDeploymentPlatformVPCNestedStackResource186D2208",
              "Outputs.PrivateSubnetIds"
            ]
          },
          {
            "Fn::Join": [
              ",",
              {
                "Ref": "ExistingPrivateSubnetIds"
              }
            ]
          }
        ]
      },
      "Condition": "VPCEnabledCondition"
    },
    "SecurityGroupIds": {
      "Description": "Security group for the lambda functions in the VPC",
      "Value": {
        "Fn::If": [
          "DeployVPCCondition",
          {
            "Fn::GetAtt": [
              "VPCDeploymentPlatformVPCNestedStackDeploymentPlatformVPCNestedStackResource186D2208",
              "Outputs.SecurityGroupIds"
            ]
          },
          {
            "Fn::Join": [
              ",",
              {
                "Ref": "ExistingSecurityGroupIds"
              }
            ]
          }
        ]
      },
      "Condition": "VPCEnabledCondition"
    },
    "AvailabilityZones": {
      "Description": "Comma separated list of AZs in which subnets of the VPCs are created",
      "Value": {
        "Fn::If": [
          "DeployVPCCondition",
          {
            "Fn::GetAtt": [
              "VPCDeploymentPlatformVPCNestedStackDeploymentPlatformVPCNestedStackResource186D2208",
              "Outputs.AvailabilityZones"
            ]
          },
          {
            "Fn::Join": [
              ",",
              {
                "Ref": "VpcAzs"
              }
            ]
          }
        ]
      },
      "Condition": "VPCEnabledCondition"
    },
    "WebConfigKey": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "/gaab-webconfig/",
            {
              "Ref": "AWS::StackName"
            }
          ]
        ]
      }
    },
    "CloudFrontWebUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "WebAppNestedStackWebAppNestedStackResource4E994CA7",
                "Outputs.DeploymentPlatformStackWebAppWebsiteUICloudFrontDistribution38CBCDC5DomainName"
              ]
            }
          ]
        ]
      },
      "Condition": "DeployWebAppUIInfrastructureCondition"
    },
    "CognitoClientId": {
      "Value": {
        "Fn::GetAtt": [
          "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
          "Outputs.DeploymentPlatformCognitoSetupUserPoolClientIdFE2BD0AE"
        ]
      }
    },
    "CognitoUserPoolId": {
      "Value": {
        "Fn::GetAtt": [
          "UseCaseManagementSetupUseCaseManagementNestedStackUseCaseManagementNestedStackResource7ED7E421",
          "Outputs.DeploymentPlatformCognitoSetupUserPoolId0A73EB1C"
        ]
      }
    },
    "RestEndpointUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiF86B015F"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "UseCaseManagementSetupRequestProcessorDeploymentRestEndpointDeploymentRestEndPointLambdaRestApiDeploymentStageprodE2564A5F"
            },
            "/"
          ]
        ]
      }
    },
    "LLMConfigTableName": {
      "Value": {
        "Fn::GetAtt": [
          "DeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResourceF56260D3",
          "Outputs.DeploymentPlatformStackDeploymentPlatformStorageLLMConfigTable9EB214F1Ref"
        ]
      }
    },
    "UseCasesTableName": {
      "Value": {
        "Fn::GetAtt": [
          "DeploymentPlatformStorageDeploymentPlatformStorageNestedStackDeploymentPlatformStorageNestedStackResourceF56260D3",
          "Outputs.DeploymentPlatformStackDeploymentPlatformStorageUseCasesTable8AE1DCF5Ref"
        ]
      }
    }
  },
  "Mappings": {
    "Solution": {
      "Data": {
        "SendAnonymousUsageData": "Yes",
        "ID": "SO0276",
        "Version": "v3.0.3",
        "SolutionName": "generative-ai-application-builder-on-aws"
      }
    },
    "FeaturesToDeploy": {
      "Deploy": {
        "CustomDashboard": "Yes"
      }
    },
    "SourceCode": {
      "General": {
        "S3Bucket": "solutions",
        "KeyPrefix": "generative-ai-application-builder-on-aws/v3.0.3",
        "SolNamePrefix": "generative-ai-application-builder-on-aws"
      }
    }
  }
}